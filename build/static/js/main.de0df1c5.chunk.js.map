{"version":3,"sources":["components/dashboard/reducer/constants.js","components/dashboard/reducer/actions.js","components/goal/constants/configs.js","components/goal/components/goal_date_timestamps.jsx","reusable/clickOutside.js","reusable/edit_input.jsx","components/goal/components/goal_success_criteria.jsx","components/goal/components/goal_details.jsx","reusable/select.jsx","components/dashboard/reducer/helper.js","components/goal/components/goal_header.jsx","components/goal/goal.jsx","components/dashboard/dashboard.jsx","components/dashboard/components/filter_controls.jsx","root/root.jsx","root/reducer/reducer.js","components/dashboard/reducer/reducer.js","index.js"],"names":["actionConstants","labels","backgroundColor","optionName","goalStatuses","selectedName","stateLabel","moreActions","action","toggleCollapseCategory","categoryId","type","payload","changeGoalStatus","goalId","status","deleteGoal","renameGoal","title","changeTimestamp","name","value","renameCriteria","criteriaId","deleteCriteria","createCriteria","toggleCriteria–°ompletion","addGoal","discardGoalCreation","toggleFilters","changeGoalTitle","changeGoalCategory","createGoal","changeView","viewBy","createCategory","timestampsConfig","label","GoalDateTimestamps","goalDetails","className","map","idx","defaultValue","onChange","target","useOutsideClick","ref","callback","handleClick","e","current","contains","useEffect","document","addEventListener","removeEventListener","EditInput","props","applyFieldName","endEditing","showActionButtons","nameInputRef","useRef","applyChanges","trim","select","onClick","GoalSuccessCriteria","successCriteria","useState","isEditingCriteria","showHideEditing","isCreatingCriteria","toggleCriteriaCreating","isCompleted","id","checked","GoalDetails","attachments","criteria","Select","onAction","modifiers","options","isGoalCollapsed","isMenuShown","showHideMenu","selectedOption","find","option","classname","classNames","renderSelect","generateNewGoal","groupOrder","listOrder","actionItems","closed","done","Date","now","start","deadline","finish","generateNewCriteria","generateNewCategory","isCollapsed","state","categoryIdx","categories","findIndex","category","slice","changeGoalProperty","propName","goals","goal","connect","dispatch","bindActionCreators","showHideGoal","isEditingName","toggleEditingName","selectsConfig","actions","actionsType","selectHeader","getGoalHeaderConfig","statusSelect","actionName","console","log","stopPropagation","config","key","goalClasses","canceled","item","dashboard","renderGoalsByCategories","filteredGoals","filter","length","renderDashboard","showGoalCreation","showFilters","goalCreation","showGroupCreating","showHideGroupCreating","placeholder","disabled","selected","categoryName","window","localStorage","setItem","JSON","stringify","RootReducer","initialModifiersState","filterControlsInitialState","initialState","DashboardReducer","Object","assign","middlewares","thunkMiddleware","store","createStore","combineReducers","root","parse","getItem","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"kMAAaA,EACI,cADJA,EAEQ,kBAFRA,EAIiB,2BAJjBA,EAKW,qBALXA,EAMI,cANJA,EAOI,cAPJA,EAQS,mBARTA,EASQ,kBATRA,EAUQ,kBAVRA,EAWQ,kBAXRA,EAYmB,6BAZnBA,EAcC,WAdDA,EAec,wBAfdA,EAgBO,iBAhBPA,EAiBU,oBAjBVA,EAkBa,uBAlBbA,EAmBI,cAGJC,EAAS,CACnB,CACCC,gBAAiB,MACjBC,WAAY,WAEb,CACCD,gBAAiB,SACjBC,WAAY,WAEb,CACCD,gBAAiB,YACjBC,WAAY,WAEb,CACCD,gBAAiB,YACjBC,WAAY,YAIHC,EAAe,CACzB,CACCF,gBAAiB,OACjBC,WAAY,UACZE,aAAc,UACdC,WAAY,WAEb,CACCJ,gBAAiB,OACjBC,WAAY,cACZE,aAAc,cACdC,WAAY,cAEb,CACCJ,gBAAiB,QACjBC,WAAY,OACZE,aAAc,OACdC,WAAY,QAEb,CACCJ,gBAAiB,OACjBC,WAAY,WACZE,aAAc,WACdC,WAAY,aAIFC,EAAc,CACzB,CACCJ,WAAY,YACZK,OAAQ,kBAET,CACCL,WAAY,kBACZK,OAAQ,mBAET,CACCL,WAAY,UACZK,OAAQ,gBAET,CACCL,WAAY,SACZK,OAAQ,gBCjFNC,EAAyB,SAACC,GAAD,MAAiB,CAACC,KAAMX,EAA0CY,QAASF,IAEpGG,EAAmB,SAACC,EAAQC,GAAT,MAAqB,CAACJ,KAAMX,EAAoCY,QAAS,CAACE,SAAQC,YAErGC,EAAa,SAACF,GAAD,MAAa,CAACH,KAAMX,EAA6BY,QAAS,CAACE,YAExEG,EAAa,SAACH,EAAQI,GAAT,MAAoB,CAACP,KAAMX,EAA6BY,QAAS,CAACE,SAAQI,WAEvFC,EAAkB,SAACL,EAAQM,EAAMC,GAAf,MAA0B,CAACV,KAAMX,EAAkCY,QAAS,CAACE,SAAQM,OAAMC,WAE7GC,EAAiB,SAACR,EAAQS,EAAYL,GAArB,MAAgC,CAACP,KAAMX,EAAiCY,QAAS,CAACE,SAAQS,aAAYL,WAEvHM,EAAiB,SAACV,EAAQS,GAAT,MAAyB,CAACZ,KAAMX,EAAiCY,QAAS,CAACE,SAAQS,gBAEpGE,EAAiB,SAACX,EAAQI,GAAT,MAAoB,CAACP,KAAMX,EAAiCY,QAAS,CAACE,SAAQI,WAE/FQ,EAA2B,SAACZ,EAAQS,GAAT,MAAyB,CAACZ,KAAMX,EAA4CY,QAAS,CAACE,SAAQS,gBAEzHI,EAAU,iBAAO,CAAChB,KAAMX,IAExB4B,EAAsB,iBAAO,CAACjB,KAAMX,IAEpC6B,EAAgB,iBAAO,CAAClB,KAAMX,IAE9B8B,EAAkB,SAACZ,GAAD,MAAY,CAACP,KAAMX,EAAmCY,QAASM,IAEjFa,EAAqB,SAACrB,GAAD,MAAiB,CAACC,KAAMX,EAAsCY,SAAUF,IAE7FsB,EAAa,SAACd,EAAOR,GAAR,MAAwB,CAACC,KAAMX,EAA6BY,QAAS,CAACM,QAAOR,gBAE1FuB,EAAa,SAACC,GAAD,MAAa,CAACvB,KAAMX,EAA6BY,QAASsB,IAEvEC,EAAiB,SAACf,GAAD,MAAW,CAACT,KAAMX,EAAiCY,QAASQ,I,wBClCtEgB,EAAmB,CAC5B,CACIhB,KAAM,QACNiB,MAAO,SAEX,CACIjB,KAAM,WACNiB,MAAO,YAEX,CACIjB,KAAM,SACNiB,MAAO,W,OCOAC,EAfY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAapB,EAAf,EAAeA,gBAAf,OACvB,qBAAKqB,UAAU,0BAAf,SACKJ,EAAiBK,KAAI,WAAgBC,GAAhB,IAAEtB,EAAF,EAAEA,KAAMiB,EAAR,EAAQA,MAAR,OAClB,kCAAkBA,EAAlB,IACI,uBACI1B,KAAK,OACLgC,aAAcJ,EAAYnB,GAC1BA,KAAMA,EACNwB,SAAU,oBAAEC,OAAUzB,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,MAAlB,OAA8BF,EAAgBC,EAAMC,QAL1DqB,SCYTI,EAhBS,SAACC,EAAKC,GAC5B,IAAMC,EAAc,SAAAC,GACdH,EAAII,UAAYJ,EAAII,QAAQC,SAASF,EAAEL,SACzCG,KAIJK,qBAAU,WAGR,OAFAC,SAASC,iBAAiB,QAASN,GAE5B,WACLK,SAASE,oBAAoB,QAASP,QC2B7BQ,GApCG,SAACC,GAAW,IAAD,EAMrBA,EAJAxC,aAFqB,MAEb,GAFa,EAGrByC,EAGAD,EAHAC,eACAC,EAEAF,EAFAE,WACAC,EACAH,EADAG,kBAGEC,EAAeC,mBAEfC,EAAe,WACdF,EAAaX,QAAQ9B,MAAM4C,SAC1BN,EAAeG,EAAaX,QAAQ9B,OACpCuC,MAUR,OANAd,EAAgBgB,GAAc,kBAAME,OAEpCX,qBAAU,WACNS,EAAaX,SAAWW,EAAaX,QAAQe,WAC9C,IAGC,sBAAK1B,UAAU,OAAf,UACI,uBAAO7B,KAAK,OAAOoC,IAAKe,EAAcnB,aAAczB,EAAOsB,UAAU,eACpEqB,GACG,qCACI,wBAAQM,QAAS,kBAAMH,KAAvB,kBACA,wBAAQG,QAAS,kBAAMP,KAAvB,0BCwBLQ,GArDa,SAACV,GAAW,IAEhClC,EAKAkC,EALAlC,eACAF,EAIAoC,EAJApC,eACAI,EAGAgC,EAHAhC,8BACAD,EAEAiC,EAFAjC,eACc4C,EACdX,EADAnB,YAAc8B,gBANiB,EASUC,oBAAS,GATnB,mBAS5BC,EAT4B,KASTC,EATS,OAWkBF,oBAAS,GAX3B,mBAW5BG,EAX4B,KAWRC,EAXQ,KAmCnC,OACI,sBAAKlC,UAAU,YAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,iDACA,wBAAQ2B,QAAS,kBAAMO,GAAuB,IAA9C,gCAEHL,EAAgB5B,KA5BF,SAAC,GAAD,IAAEkC,EAAF,EAAEA,YAAazD,EAAf,EAAeA,MAAUK,EAAzB,EAAsBqD,GAAtB,OACnB,sBAAKpC,UAAU,mBAAf,UACI,uBAAO7B,KAAK,WAAWkE,QAASF,EAAa/B,SAAU,kBAAMlB,EAAyBH,MACrFgD,EACG,cAAC,GAAD,CACIrD,MAAOA,EACPyC,eAAgB,SAACzC,GAAD,OAAWI,EAAeC,EAAYL,IACtD0C,WAAY,kBAAMY,GAAgB,IAClCX,mBAAiB,IAGrB,qCACI,mBAAGrB,UAAU,yBAAb,SAAuCtB,IACvC,sBAAKsB,UAAU,2BAAf,UACI,wBAAQ2B,QAAS,kBAAMK,GAAgB,IAAvC,oBACA,wBAAQL,QAAS,kBAAM3C,EAAeD,IAAtC,kCAduBA,MA4BlCkD,GACG,cAAC,GAAD,CACId,eAAgB,SAACzC,GAAD,OAAWO,EAAeP,IAC1C0C,WAAY,kBAAMc,GAAuB,IACzCb,mBAAiB,QCxBtBiB,GArBK,SAACpB,GAAW,IAKrBqB,EAFHrB,EADAnB,YAGGwC,YAEP,OACI,sBAAKvC,UAAU,eAAf,UACI,cAAC,EAAD,eAAwBkB,IACxB,uBACA,cAAC,GAAD,eAAyBA,IACxBqB,EAAYtC,KAAI,SAACuC,EAAUtC,GAAX,OACb,6C,QCkFDuC,GAhGA,SAACvB,GAAW,IAEnBwB,EAMAxB,EANAwB,SACAC,EAKAzB,EALAyB,UACAxE,EAIA+C,EAJA/C,KACA6B,EAGAkB,EAHAlB,UACA4C,EAEA1B,EAFA0B,QACAC,EACA3B,EADA2B,gBAGEtC,EAAMgB,mBAVU,EAYcO,oBAAS,GAZvB,mBAYfgB,EAZe,KAYFC,EAZE,KAchBC,EAAiBJ,EAAQK,MAAK,SAACC,GAAD,OAAYP,EAAUO,EAAOpF,gBAAgB8E,EAAQ,GAEnFO,EAAYC,IACd,gBADwB,wBAEPJ,EAAetF,iBAFR,wCAIFsF,EAAetF,gBAJb,WAIyCoF,IAAgBD,IAIrFvC,EAAgBC,GAAK,kBAAMuC,GAAeC,GAAa,MAqEvD,OAnEqB,WACjB,OAAO5E,GACH,IAAK,cACD,OACI,sBAAK6B,UAAW,kCAAoCA,EAApD,UACI,wBACI2B,QAAS,kBAAMoB,GAAcD,IAC7B9C,UAAWmD,EAFf,SAGEH,EAAenF,eAChBiF,GACG,qBAAK9C,UAAU,UAAUO,IAAKA,EAA9B,SACKqC,EAAQ3C,KAAI,SAACiD,EAAQhD,GAAT,OACT,qBAAKF,UAAW,kBAAoBkD,EAAOxF,gBAEvCiE,QAAS,kBAAMe,EAASQ,EAAOpF,aAAeiF,GAAa,IAF/D,SAGEG,EAAOvF,YAFAuC,WAQjC,IAAK,SACD,OACI,sBAAKF,UAAW,kCAAoCA,EAApD,UACI,wBACI2B,QAAS,kBAAMoB,GAAcD,IAC7B9C,UAAWmD,EAFf,SAGEH,EAAenF,eAChBiF,GACG,qBAAK9C,UAAU,UAAUO,IAAKA,EAA9B,SACKqC,EAAQ3C,KAAI,SAACiD,EAAQhD,GAAT,OACT,qBAAKF,UAAW,kBAAoBkD,EAAOxF,gBAEvCiE,QAAS,WACLe,EAASQ,EAAOpF,YAChBiF,GAAa,IAJrB,SAMEG,EAAOvF,YALAuC,WAWjC,IAAK,OACD,OACI,sBAAKF,UAAW,kCAAoCA,EAApD,UACI,wBACI2B,QAAS,kBAAMoB,GAAcD,IAC7B9C,UAAWmD,EAFf,eAICL,GACD,qBAAK9C,UAAU,UAAUO,IAAKA,EAA9B,SACKqC,EAAQ3C,KAAI,SAACiD,EAAQhD,GAAT,OACT,qBAAKF,UAAW,kBAAoBkD,EAAOxF,gBAEvCiE,QAAS,kBAAMe,EAASQ,EAAOlF,SAAW+E,GAAa,IAF3D,SAGEG,EAAOvF,YAFAuC,WAQ7B,QACI,OAAO,6CAIZmD,I,QC/FLC,GAAkB,SAAC,GAAD,IAAEC,EAAF,EAAEA,WAAYC,EAAd,EAAcA,UAAd,MAAiD,CACrE9E,MADoB,EAAyBA,MAE7CR,WAFoB,EAAgCA,WAGpDqF,aACAC,YACAC,YAAa,GACb5D,MAAOpC,EAAO,GACdkF,UAAW,CACPe,QAAQ,EACRC,MAAM,GAEVvB,GAAIwB,KAAKC,MACT9D,YAAa,CACT+D,MAAO,GACPC,SAAU,GACVC,OAAQ,GACRnC,gBAAiB,GACjBU,YAAa,MAIf0B,GAAsB,SAACvF,GAAD,MAAY,CACpCA,QACAyD,aAAa,EACbC,GAAIwB,KAAKC,QAGPK,GAAsB,SAACtF,GAAD,MAAW,CACnCA,OACAuF,aAAa,EACb/B,GAAIwB,KAAKC,QAGP5F,GAAyB,SAACmG,EAAOlG,GACnC,IAAMmG,EAAcD,EAAME,WAAWC,WAAU,SAAAC,GAAQ,OAAIA,EAASpC,MAAQlE,KAC5E,OAAO,2BACAkG,GADP,IAEIE,WAAW,GAAD,oBACHF,EAAME,WAAWG,MAAM,EAAGJ,IADvB,4BAGCD,EAAME,WAAWD,IAHlB,IAIFF,aAAcC,EAAME,WAAWD,GAAaF,eAJ1C,aAMHC,EAAME,WAAWG,MAAMJ,EAAY,QAK5CK,GAAqB,SAACN,EAAOhG,EAASuG,GAAc,IAC/CC,EAASR,EAATQ,MACP,OAAO,2BACAR,GADP,IAEIQ,MAAOA,EAAM3E,KAAI,SAAC4E,GAId,OAHGA,EAAKzC,MAAQhE,EAAQE,SACpBuG,EAAKF,GAAYvG,EAAQuG,IAEtBE,QCkCJC,eAAQ,MAPI,SAACC,GACxB,OAAOC,YAAmB,CACtBxG,aACAH,mBACAI,cACDsG,KAEQD,EAlFI,SAAC5D,GAAW,IAEvB2D,EAMA3D,EANA2D,KACApG,EAKAyC,EALAzC,WACAD,EAIA0C,EAJA1C,WACAH,EAGA6C,EAHA7C,iBACA4G,EAEA/D,EAFA+D,aACApC,EACA3B,EADA2B,gBAGGT,EAAiByC,EAAjBzC,GAAIO,EAAakC,EAAblC,UAVe,EAYiBb,oBAAS,GAZ1B,mBAYnBoD,EAZmB,KAYJC,EAZI,KAoCpBC,EDiBkB,SAACP,EAAMQ,GAAa,IACrCxF,EAAoBgF,EAApBhF,MAAO8C,EAAakC,EAAblC,UACd,MAAO,CACH,CACI2C,YAAa,cACbC,aAAc,IACd7H,gBAAiBmC,EAAMnC,gBACvBkF,QAASnF,EACTuC,UAAW,SACX7B,KAAM,eAEV,CACImH,YAAa,eACb1C,QAAShF,EACT+E,UAAWA,EACX3C,UAAW,SACX7B,KAAM,UAEV,CACImH,YAAa,cACbC,aAAc,IACd7H,gBAAiB,cACjBkF,QAAS7E,EACTiC,UAAW,OACX7B,KAAM,SAEZ8B,KAAI,SAACyB,GAAD,mBAAC,eAAgBA,GAAjB,IAAyBgB,SAAU2C,EAAQ3D,EAAO4D,kBC3ClCE,CAAoBX,EAtBnB,CACnBY,aAAc,SAAClH,GAAD,OAAYF,EAAiB+D,EAAI7D,IAC/CR,YAAa,SAAC2H,GACV,OAAOA,GACH,IAAK,iBACDP,GAAkB,GAClB,MACJ,IAAK,kBACDQ,QAAQC,IAAI,mBACZ,MACJ,IAAK,eACDD,QAAQC,IAAI,gBACZ,MACJ,IAAK,cACDpH,EAAW4D,OAmB3B,OACI,sBAAKpC,UAAU,cAAf,UACI,qBAAKA,UAAU,gBAAf,SACI,uBACI7B,KAAK,WACLkE,QAASM,EAAUgB,KACnBvD,SAAU,WAdtB/B,EAAiB+D,EAAIO,EAAUgB,KAAO,UAAY,aAiB9C,qBAAK3D,UAAU,aAAf,SACCkF,EACG,cAAC,GAAD,CACI/D,eAAgB,SAACzC,GAAD,OAAWD,EAAW2D,EAAI1D,IAC1C0C,WAAY,kBAAM+D,GAAkB,IACpCzG,MAAOmG,EAAKnG,QAGhB,qBAAKiD,QAAS,kBAAMsD,GAAcpC,IAAlC,SACI,8BAAIgC,EAAKnG,MAAM,wBAAQiD,QAvBT,SAACjB,GAC3BA,EAAEmF,kBACFV,GAAkB,IAqBS,2BAItBtC,GAAmB,kDACnBuC,EAAcnF,KAAI,SAAC6F,EAAQ5F,GAAT,OAAiB,wBAAC,GAAD,uCAAY2E,GAAZ,IAAkBhC,gBAAiBA,GAAqBiD,GAAxD,IAAgEC,IAAK7F,cCRtG4E,eAAQ,MATI,SAACC,GACxB,OAAOC,YAAmB,CACtBrG,kBACAG,iBACAE,iBACAC,iBACAC,mCACD6F,KAEQD,EAxDF,SAAC5D,GAAW,IAEjB2D,EAMA3D,EANA2D,KACAlG,EAKAuC,EALAvC,gBACAG,EAIAoC,EAJApC,eACAE,EAGAkC,EAHAlC,eACAC,EAEAiC,EAFAjC,eACAC,EACAgC,EADAhC,8BAGGuE,EAAkDoB,EAAlDpB,YAAgBnF,EAAkCuG,EAArCzC,GAAWrC,EAA0B8E,EAA1B9E,YAAa4C,EAAakC,EAAblC,UAVxB,EAWoBb,oBAAS,GAX7B,mBAWbe,EAXa,KAWIoC,EAXJ,KAade,EAAc5C,IAChB,OACA,CACI,eAAgBP,EAChB,iBAAkBF,EAAUsD,SAC5B,aAActD,EAAUgB,KACxB,4BAA6BhB,EAAUsD,WAAatD,EAAUgB,OAItE,OACI,sBAAK3D,UAAWgG,EAAhB,UACI,cAAC,GAAD,CACInB,KAAMA,EACNhC,gBAAiBA,EACjBoC,aAAcA,KAEhBpC,GACE,cAAC,GAAD,CACI9C,YAAaA,EACbpB,gBAAiB,SAACC,EAAMC,GAAP,OAAiBF,EAAgBL,EAAQM,EAAMC,IAChEC,eAAgB,SAACC,EAAYL,GAAb,OAAuBI,EAAeR,EAAQS,EAAYL,IAC1EM,eAAgB,SAACD,GAAD,OAAgBC,EAAeV,EAAQS,IACvDE,eAAgB,SAACP,GAAD,OAAWO,EAAeX,EAAQI,IAClDQ,gCAA0B,SAACH,GAAD,OAAgBG,EAAyBZ,EAAQS,MAGnF,6BACK0E,EAAYxD,KAAI,SAACiG,EAAMhG,GAAP,OAAe,6BAAegG,GAANhG,cCG1C4E,gBAZS,SAACV,GAAD,MAAY,CAChCE,WAAYF,EAAM+B,UAAU7B,WAC5B5E,OAAQ0E,EAAM+B,UAAUzG,OACxBkF,MAAOR,EAAM+B,UAAUvB,UAGA,SAACG,GACxB,OAAOC,YAAmB,CACtB/G,0BACD8G,KAGQD,EApDQ,SAAC5D,GAAW,IAE3BoD,EAIApD,EAJAoD,WACA5E,EAGAwB,EAHAxB,OACAkF,EAEA1D,EAFA0D,MACA3G,EACAiD,EADAjD,uBAGEmI,EAA0B,SAAC5B,GAAc,IACpC5F,EAAoC4F,EAApC5F,KAAMuF,EAA8BK,EAA9BL,YAAgBjG,EAAcsG,EAAjBpC,GACpBiE,EAAgBzB,EAAM0B,QAAO,SAAAzB,GAAI,OAAIA,EAAK3G,cAAgBA,KAChE,OACI,sBAAsB8B,UAAU,WAAhC,UACI,sBACI2B,QAAS,kBAAM1D,EAAuBC,IACtC8B,UAAU,gBAFd,UAGC,8BAAIpB,EAAJ,MAAayH,EAAcE,UAAW,qBAAKvG,UAAU,eAAc,mBAAGA,UAAU,kBAAb,wBAClEmE,GAAekC,EAAcpG,KAAI,SAAC4E,GAAD,OAAU,cAAC,GAAD,CAAoBA,KAAMA,GAAfA,EAAKzC,SALvDlE,IAqBlB,OACI,qBAAK8B,UAAU,YAAf,SAZoB,WACpB,OAAON,GACH,IAAK,SACD,OAAO4E,EAAWrE,IAAImG,GAC1B,IAAK,WACD,OAAOxB,EAAM3E,KAAI,SAAC4E,GAAD,OAAU,wBAAC,GAAD,2BAAU3D,GAAV,IAAiB2D,KAAMA,EAAMkB,IAAKlB,EAAKzC,SACtE,QACI,OAAO,6CAMVoE,QC+DE1B,gBApBS,SAACV,GAAD,MAAY,CAChCqC,iBAAkBrC,EAAM+B,UAAUM,iBAClCC,YAAatC,EAAM+B,UAAUO,YAC7BC,aAAcvC,EAAM+B,UAAUQ,aAC9BrC,WAAYF,EAAM+B,UAAU7B,eAGL,SAACS,GACxB,OAAOC,YAAmB,CACtB7F,UACAC,sBACAC,gBACAC,kBACAE,aACAD,qBACAE,aACAE,kBACDoF,KAGQD,EA1FQ,SAAC5D,GAAW,IAE3BuF,EAaAvF,EAbAuF,iBACAC,EAYAxF,EAZAwF,YACAC,EAWAzF,EAXAyF,aACArC,EAUApD,EAVAoD,WAEAnF,EAQA+B,EARA/B,QACAC,EAOA8B,EAPA9B,oBACAC,EAMA6B,EANA7B,cACAC,EAKA4B,EALA5B,gBACAC,EAIA2B,EAJA3B,mBACAC,EAGA0B,EAHA1B,WACAC,EAEAyB,EAFAzB,WACAE,EACAuB,EADAvB,eAGGjB,EAAqBiI,EAArBjI,MAAOR,EAAcyI,EAAdzI,WAjBgB,EAmBqB4D,oBAAS,GAnB9B,mBAmBvB8E,EAnBuB,KAmBJC,EAnBI,KAqB9B,OACI,gCACI,sBAAK7G,UAAU,kBAAf,UACI,qBAAKA,UAAU,gBAAf,SACKyG,EACG,qCACI,uBACItI,KAAK,OACL6B,UAAU,gBACV8G,YAAY,cACZ1G,SAAU,SAACM,GAAD,OAAOpB,EAAgBoB,EAAEL,OAAOxB,QAC1CA,MAAOH,IAEX,sBAAKsB,UAAU,UAAf,UACI,wBAAQ+G,UAAWrI,EAAM6H,SAAWrI,EAAYyD,QAAS,kBAAMnC,EAAWd,EAAOR,IAAjF,oBACA,wBAAQyD,QAAS,kBAAMvC,KAAvB,uBAEJ,yBAAQgB,SAAU,SAACM,GAAD,OAAOnB,EAAmBmB,EAAEL,OAAOxB,QAArD,UACI,wBAAQkI,UAAQ,EAACC,UAAQ,IACxB1C,EAAWrE,KAAI,gBAAEmC,EAAF,EAAEA,GAAIxD,EAAN,EAAMA,KAAN,OACZ,wBAAQC,MAAOuD,EAAf,SAA6BxD,GAALwD,YAIpC,wBAAQT,QAAS,kBAAMxC,KAAWa,UAAU,WAA5C,wBAEP0G,EACG,wBAAQ/E,QAAS,kBAAMtC,KAAvB,0BACA,wBAAQsC,QAAS,kBAAMtC,KAAvB,0BACJ,wBAAQsC,QAAS,kBAAMkF,GAAuBD,IAA9C,uBACA,sBAAK5G,UAAU,UAAf,UACI,yCACA,yBAAQI,SAAU,SAACM,GAAD,OAAOjB,EAAWiB,EAAEL,OAAOxB,QAA7C,UACI,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,gCAIX+H,GACG,cAAC,GAAD,CACIzF,eAAgB,SAAC8F,GAAD,OAAkBtH,EAAesH,IACjD7F,WAAY,kBAAMyF,GAAsB,IACxCxF,mBAAiB,UC1DtByD,gBAFS,SAACV,GAAD,MAAY,CAACA,WAEtBU,EAfF,SAAC,GAAa,IAAZV,EAAW,EAAXA,MAKb,OAJAvD,qBAAU,WACRqG,OAAOC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUlD,MAClD,CAACA,IAGF,sBAAKpE,UAAU,OAAf,UACI,cAAC,GAAD,IACA,cAAC,GAAD,U,iBCNOuH,GAPK,WAAyB,IAAxBnD,EAAuB,uDAAf,GAAIpG,EAAW,uCAGhC,OAFDA,EAAOG,KAECiG,GCDboD,GAAwB,CAC1B9D,QAAQ,EACRC,MAAM,GAGJ8D,GAA6B,CAC/BhB,kBAAkB,EAClBC,aAAa,EACbC,aAAc,CACVjI,MAAO,GACPR,WAAY,OAUdwJ,GAAY,2BACXD,IAPqB,CACxBnD,WAAY,GACZM,MAAO,GACPlF,OAAQ,WA+JGiI,GAvJU,WAAmC,IAAlCvD,EAAiC,uDAAzBsD,GAAc1J,EAAW,uCAChDG,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,QACb,OAAOD,GACH,KAAKX,EACD,IAAM+F,EAAaa,EAAMQ,MAAM0B,QAAO,SAAAzB,GAAI,OAAIA,EAAK3G,cAAgBE,EAAQF,cAAYqI,OACjF/C,EAAYY,EAAMQ,MAAM2B,OAAS,EACvC,OAAO,2BACAnC,GADP,IAEIQ,MAAM,GAAD,oBAAMR,EAAMQ,OAAZ,CAAmBtB,GAAgB,2BAAIlF,GAAL,IAAcmF,aAAYC,iBACjEc,WAAYF,EAAME,WAAWrE,KAAI,SAAAuE,GAI7B,OAHGA,EAASpC,MAAQhE,EAAQF,aACxBsG,EAASL,aAAc,GAEpBK,MAERiD,IAEX,KAAKjK,EACD,OAAOS,GAAuBmG,EAAOhG,GACzC,KAAKZ,EACD,OAAO,2BACA4G,GADP,IAEIQ,MAAOR,EAAMQ,MAAM3E,KAAI,SAAC4E,GAQpB,OAPGA,EAAKzC,MAAQhE,EAAQE,UACpBuG,EAAO+C,OAAOC,OAAO,GAAIhD,IACpBlC,UAAL,2BACO6E,IADP,mBAEKpJ,EAAQG,QAAS,KAGnBsG,OAGnB,KAAKrH,EACD,OAAO,2BACA4G,GADP,IAEIQ,MAAOR,EAAMQ,MAAM0B,QAAO,SAAAzB,GAAI,OAAIA,EAAKzC,MAAQhE,EAAQE,YAE/D,KAAKd,EACD,OAAOkH,GAAmBN,EAAOhG,EAAS,SAC9C,KAAKZ,EACD,OAAO,2BACA4G,GADP,IAEIQ,MAAOR,EAAMQ,MAAM3E,KAAI,SAAA4E,GAInB,OAHGA,EAAKzC,MAAQhE,EAAQE,SACpBuG,EAAK9E,YAAY3B,EAAQQ,MAAQ,CAACR,EAAQS,QAEvCgG,OAGnB,KAAKrH,EACD,OAAO,2BACA4G,GADP,IAEIQ,MAAOR,EAAMQ,MAAM3E,KAAI,SAAA4E,GASnB,OARGA,EAAKzC,MAAQhE,EAAQE,SACpBuG,EAAK9E,YAAY8B,gBAAkBgD,EAAK9E,YAAY8B,gBAAgB5B,KAAI,SAAAuC,GAIpE,OAHGA,EAASJ,MAAQhE,EAAQW,aACxByD,EAAS9D,MAAQN,EAAQM,OAEtB8D,MAGRqC,OAGnB,KAAKrH,EACD,OAAO,2BACA4G,GADP,IAEIQ,MAAOR,EAAMQ,MAAM3E,KAAI,SAAA4E,GAKnB,OAJGA,EAAKzC,MAAQhE,EAAQE,UACpBuG,EAAO+C,OAAOC,OAAO,GAAIhD,IACpB9E,YAAY8B,gBAAkBgD,EAAK9E,YAAY8B,gBAAgByE,QAAO,SAAA9D,GAAQ,OAAIA,EAASJ,MAAQhE,EAAQW,eAE7G8F,OAGnB,KAAKrH,EACD,OAAO,2BACA4G,GADP,IAEIQ,MAAOR,EAAMQ,MAAM3E,KAAI,SAAA4E,GAInB,OAHGA,EAAKzC,MAAQhE,EAAQE,SACpBuG,EAAK9E,YAAY8B,gBAAjB,uBAAuCgD,EAAK9E,YAAY8B,iBAAxD,CAAyEoC,GAAoB7F,EAAQM,UAElGmG,OAGnB,KAAKrH,EACD,OAAO,2BACA4G,GADP,IAEIQ,MAAOR,EAAMQ,MAAM3E,KAAI,SAAA4E,GAWnB,OAVGA,EAAKzC,MAAQhE,EAAQE,UACpBuG,EAAO+C,OAAOC,OAAO,GAAIhD,IACpB9E,YAAY8B,gBAAkBgD,EAAK9E,YAAY8B,gBAAgB5B,KAAI,SAAAuC,GACpE,OAAGA,EAASJ,MAAQhE,EAAQW,WAAmByD,EACxC,2BACAA,GADP,IAEIL,aAAcK,EAASL,kBAI5B0C,OAGnB,KAAKrH,EACD,OAAO,2BACA4G,GADP,IAEIE,WAAW,GAAD,oBAAMF,EAAME,YAAZ,CAAwBJ,GAAoB9F,OAE9D,KAAKZ,EACD,OAAO,2BACA4G,GADP,IAEIsC,aAAa,EACbD,kBAAkB,IAE1B,KAAKjJ,EACD,OAAO,2BACA4G,GACAqD,IAEX,KAAKjK,EACD,OAAO,2BACA4G,GADP,IAEIqC,kBAAkB,EAClBC,aAActC,EAAMsC,cAE5B,KAAKlJ,EACD,OAAO,2BACA4G,GADP,IAEIuC,aAAa,2BACNvC,EAAMuC,cADD,IAERjI,MAAOV,EAAOI,YAG1B,KAAKZ,EACD,OAAO,2BACA4G,GADP,IAEIuC,aAAa,2BACNvC,EAAMuC,cADD,IAERzI,WAAYF,EAAOI,YAG/B,KAAKZ,EACD,OAAO,2BACA4G,GADP,IAEI1E,OAAQ1B,EAAOI,UAEvB,QACI,OAAOgG,ICpKb0D,GAAc,CAACC,MAIfC,GAAQC,YACZC,YAAgB,CACdC,QACAhC,eAEFkB,KAAKe,MAAMlB,OAAOC,aAAakB,QAAQ,UAPpB,GAQnBC,IAAe,WAAf,EAAmBR,KAGrBS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJlH,SAAS4H,eAAe,W","file":"static/js/main.de0df1c5.chunk.js","sourcesContent":["export const actionConstants = {\r\n    CREATE_GOAL: 'CREATE_GOAL',\r\n    CREATE_CATEGORY: 'CREATE_CATEGORY',\r\n    TOGGLE_COLLAPSE_GOAL: 'TOGGLE_COLLAPSE_GOAL',\r\n    TOGGLE_COLLAPSE_CATEGORY: 'TOGGLE_COLLAPSE_CATEGORY',\r\n    CHANGE_GOAL_STATUS: 'CHANGE_GOAL_STATUS',\r\n    DELETE_GOAL: 'DELETE_GOAL',\r\n    RENAME_GOAL: 'RENAME_GOAL',\r\n    CHANGE_TIMESTAMP: 'CHANGE_TIMESTAMP',\r\n    RENAME_CRITERIA: 'RENAME_CRITERIA',\r\n    DELETE_CRITERIA: 'DELETE_CRITERIA',\r\n    CREATE_CRITERIA: 'CREATE_CRITERIA',\r\n    TOGGLE_CRITERIA_COMPLETION: 'TOGGLE_CRITERIA_COMPLETION',\r\n    \r\n    ADD_GOAL: 'ADD_GOAL',\r\n    DISCARD_GOAL_CREATION: 'DISCARD_GOAL_CREATION',\r\n    TOGGLE_FILTERS: 'TOGGLE_FILTERS',\r\n    CHANGE_GOAL_TITLE: 'CHANGE_GOAL_TITLE',\r\n    CHANGE_GOAL_CATEGORY: 'CHANGE_GOAL_CATEGORY',\r\n    CHANGE_VIEW: 'CHANGE_VIEW',\r\n}\r\n\r\nexport const labels = [\r\n   {\r\n    backgroundColor: 'red',\r\n    optionName: 'Label 1'\r\n   },\r\n   {\r\n    backgroundColor: 'yellow',\r\n    optionName: 'Label 2'\r\n   },\r\n   {\r\n    backgroundColor: 'limegreen',\r\n    optionName: 'Label 3'\r\n   }, \r\n   {\r\n    backgroundColor: 'turquoise',\r\n    optionName: 'Label 4'\r\n   }\r\n];\r\n\r\nexport const goalStatuses = [\r\n   {\r\n    backgroundColor: 'blue',\r\n    optionName: 'Planned',\r\n    selectedName: 'PLANNED',\r\n    stateLabel: 'planned'\r\n   },\r\n   {\r\n    backgroundColor: 'blue',\r\n    optionName: 'In progress',\r\n    selectedName: 'IN PROGRESS',\r\n    stateLabel: 'inProgress'\r\n   },\r\n   {\r\n    backgroundColor: 'green',\r\n    optionName: 'Done',\r\n    selectedName: 'DONE',\r\n    stateLabel: 'done'\r\n   },\r\n   {\r\n    backgroundColor: 'gray',\r\n    optionName: 'Canceled',\r\n    selectedName: 'CANCELED',\r\n    stateLabel: 'canceled'\r\n   }\r\n];\r\n\r\n export const moreActions = [\r\n   {\r\n    optionName: 'Edit name',\r\n    action: 'EDIT_GOAL_NAME'\r\n   },\r\n   {\r\n    optionName: 'Add action item',\r\n    action: 'ADD_ACTION_ITEM'\r\n   },\r\n   {\r\n    optionName: 'Archive',\r\n    action: 'ARCHIVE_GOAL'\r\n   },\r\n   {\r\n    optionName: 'Delete',\r\n    action: 'DELETE_GOAL'\r\n   }\r\n]","import {actionConstants} from './constants';\r\n\r\nconst toggleCollapseCategory = (categoryId) => ({type: actionConstants.TOGGLE_COLLAPSE_CATEGORY, payload: categoryId})\r\n\r\nconst changeGoalStatus = (goalId, status) => ({type: actionConstants.CHANGE_GOAL_STATUS, payload: {goalId, status}})\r\n\r\nconst deleteGoal = (goalId) => ({type: actionConstants.DELETE_GOAL, payload: {goalId}})\r\n\r\nconst renameGoal = (goalId, title) => ({type: actionConstants.RENAME_GOAL, payload: {goalId, title}})\r\n\r\nconst changeTimestamp = (goalId, name, value) => ({type: actionConstants.CHANGE_TIMESTAMP, payload: {goalId, name, value}})\r\n\r\nconst renameCriteria = (goalId, criteriaId, title) => ({type: actionConstants.RENAME_CRITERIA, payload: {goalId, criteriaId, title}})\r\n\r\nconst deleteCriteria = (goalId, criteriaId) => ({type: actionConstants.DELETE_CRITERIA, payload: {goalId, criteriaId}})\r\n\r\nconst createCriteria = (goalId, title) => ({type: actionConstants.CREATE_CRITERIA, payload: {goalId, title}})\r\n\r\nconst toggleCriteria–°ompletion = (goalId, criteriaId) => ({type: actionConstants.TOGGLE_CRITERIA_COMPLETION, payload: {goalId, criteriaId}})\r\n\r\nconst addGoal = () => ({type: actionConstants.ADD_GOAL});\r\n\r\nconst discardGoalCreation = () => ({type: actionConstants.DISCARD_GOAL_CREATION});\r\n\r\nconst toggleFilters = () => ({type: actionConstants.TOGGLE_FILTERS});\r\n\r\nconst changeGoalTitle = (title) => ({type: actionConstants.CHANGE_GOAL_TITLE, payload: title})\r\n\r\nconst changeGoalCategory = (categoryId) => ({type: actionConstants.CHANGE_GOAL_CATEGORY, payload: +categoryId})\r\n\r\nconst createGoal = (title, categoryId) => ({type: actionConstants.CREATE_GOAL, payload: {title, categoryId}});\r\n\r\nconst changeView = (viewBy) => ({type: actionConstants.CHANGE_VIEW, payload: viewBy})\r\n\r\nconst createCategory = (name) => ({type: actionConstants.CREATE_CATEGORY, payload: name})\r\n\r\nexport {\r\n    renameGoal,\r\n    deleteGoal,\r\n    toggleCollapseCategory,\r\n    changeGoalStatus,\r\n    changeTimestamp,\r\n    renameCriteria,\r\n    deleteCriteria,\r\n    createCriteria,\r\n    toggleCriteria–°ompletion,\r\n    addGoal,\r\n    discardGoalCreation,\r\n    toggleFilters,\r\n    changeGoalTitle,\r\n    changeGoalCategory,\r\n    createGoal,\r\n    changeView,\r\n    createCategory\r\n}","export const timestampsConfig = [\r\n    {\r\n        name: 'start',\r\n        label: 'Start'\r\n    },\r\n    {\r\n        name: 'deadline',\r\n        label: 'Deadline'\r\n    },\r\n    {\r\n        name: 'finish',\r\n        label: 'Finish'\r\n    }\r\n]","import React from 'react';\r\nimport {timestampsConfig} from '../constants/configs';\r\n\r\nconst GoalDateTimestamps = ({goalDetails, changeTimestamp}) => (\r\n    <div className='goal-details-timestamps'>\r\n        {timestampsConfig.map(({name, label}, idx) => (\r\n            <label key={idx}>{label}: \r\n                <input\r\n                    type='date'\r\n                    defaultValue={goalDetails[name]}\r\n                    name={name}\r\n                    onChange={({target : {name, value}}) => changeTimestamp(name, value)}\r\n                />\r\n            </label>\r\n        ))}\r\n    </div>\r\n)\r\n\r\nexport default GoalDateTimestamps;","import { useEffect } from \"react\";\r\n\r\nconst useOutsideClick = (ref, callback) => {\r\n  const handleClick = e => {\r\n    if (ref.current && !ref.current.contains(e.target)) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n};\r\n\r\nexport default useOutsideClick;","import React, {useEffect, useRef} from 'react';\r\n\r\nimport useOutsideClick from './clickOutside';\r\n\r\nconst EditInput = (props) => {\r\n    const {\r\n        title = '',\r\n        applyFieldName,\r\n        endEditing,\r\n        showActionButtons\r\n    } = props;\r\n\r\n    const nameInputRef = useRef();\r\n\r\n    const applyChanges = () => {\r\n        if(nameInputRef.current.value.trim()) {\r\n            applyFieldName(nameInputRef.current.value)\r\n            endEditing();\r\n        }\r\n    }\r\n\r\n    useOutsideClick(nameInputRef, () => applyChanges());\r\n\r\n    useEffect(() => {\r\n        nameInputRef.current && nameInputRef.current.select()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='edit'>\r\n            <input type='text' ref={nameInputRef} defaultValue={title} className='edit-input'/>\r\n            {showActionButtons && (\r\n                <>\r\n                    <button onClick={() => applyChanges()}>tick</button>\r\n                    <button onClick={() => endEditing()}>cross</button>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditInput;","import React, {useState} from 'react';\r\n\r\nimport EditInput from '../../../reusable/edit_input';\r\n\r\nconst GoalSuccessCriteria = (props) => {\r\n    const {\r\n        deleteCriteria,\r\n        renameCriteria,\r\n        toggleCriteria–°ompletion,\r\n        createCriteria,\r\n        goalDetails: {successCriteria}\r\n    } = props;\r\n\r\n    const [isEditingCriteria, showHideEditing] = useState(false);\r\n\r\n    const [isCreatingCriteria, toggleCriteriaCreating] = useState(false);\r\n\r\n    const renderCriteria = ({isCompleted, title, id:criteriaId}) => (\r\n        <div className='success-criteria' key={criteriaId}>\r\n            <input type='checkbox' checked={isCompleted} onChange={() => toggleCriteria–°ompletion(criteriaId)}/>\r\n            {isEditingCriteria ? (\r\n                <EditInput\r\n                    title={title}\r\n                    applyFieldName={(title) => renameCriteria(criteriaId, title)}\r\n                    endEditing={() => showHideEditing(false)}\r\n                    showActionButtons\r\n                />\r\n            ) : (\r\n                <>\r\n                    <p className='success-criteria-title'>{title}</p>\r\n                    <div className='success-criteria-actions'>\r\n                        <button onClick={() => showHideEditing(true)}>‚úé</button>\r\n                        <button onClick={() => deleteCriteria(criteriaId)}>üóë</button>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className='criterias'>\r\n            <div className='criterias-title'>\r\n                <p>success criteria</p>\r\n                <button onClick={() => toggleCriteriaCreating(true)}>create criteria</button>\r\n            </div>\r\n            {successCriteria.map(renderCriteria)}\r\n            {isCreatingCriteria && (\r\n                <EditInput\r\n                    applyFieldName={(title) => createCriteria(title)}\r\n                    endEditing={() => toggleCriteriaCreating(false)}\r\n                    showActionButtons\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoalSuccessCriteria;","import React from 'react';\r\n\r\nimport GoalDateTimestamps from './goal_date_timestamps';\r\nimport GoalSuccessCriteria from './goal_success_criteria';\r\n\r\nconst GoalDetails = (props) => {\r\n    const {\r\n        goalDetails\r\n    } = props;\r\n    \r\n    const {attachments} = goalDetails;\r\n\r\n    return (\r\n        <div className='goal-details'>\r\n            <GoalDateTimestamps {...props}/>\r\n            <hr />\r\n            <GoalSuccessCriteria {...props}/>\r\n            {attachments.map((criteria, idx) => (\r\n                <div>\r\n                    123\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoalDetails;","import React, {useState, useRef} from 'react';\r\nimport classNames from 'classnames';\r\nimport useOutsideClick from './clickOutside';\r\n\r\nconst Select = (props) => {\r\n    const {\r\n        onAction,\r\n        modifiers,\r\n        type,\r\n        className,\r\n        options,\r\n        isGoalCollapsed\r\n    } = props;\r\n\r\n    const ref = useRef();\r\n\r\n    const [isMenuShown, showHideMenu] = useState(false);\r\n\r\n    const selectedOption = options.find((option) => modifiers[option.stateLabel]) || options[0];\r\n\r\n    const classname = classNames(\r\n        'select-header',\r\n        `select-header-${selectedOption.backgroundColor}`,\r\n        {\r\n            [`select-header-${selectedOption.backgroundColor}-opened`]: (isMenuShown || !isGoalCollapsed)\r\n        }\r\n    )\r\n\r\n    useOutsideClick(ref, () => isMenuShown && showHideMenu(false))\r\n\r\n    const renderSelect = () => {\r\n        switch(type) {\r\n            case 'multiselect':\r\n                return (\r\n                    <div className={'select-wrapper select-wrapper--' + className}>\r\n                        <button\r\n                            onClick={() => showHideMenu(!isMenuShown)}\r\n                            className={classname}\r\n                        >{selectedOption.selectedName}</button>\r\n                        {isMenuShown && (\r\n                            <div className='options' ref={ref}>\r\n                                {options.map((option, idx) => (\r\n                                    <div className={'option option--' + option.backgroundColor}\r\n                                        key={idx}\r\n                                        onClick={() => onAction(option.stateLabel) || showHideMenu(false)}\r\n                                    >{option.optionName}</div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )\r\n            case 'select':\r\n                return (\r\n                    <div className={'select-wrapper select-wrapper--' + className}>\r\n                        <button\r\n                            onClick={() => showHideMenu(!isMenuShown)}\r\n                            className={classname}\r\n                        >{selectedOption.selectedName}</button>\r\n                        {isMenuShown && (\r\n                            <div className='options' ref={ref}>\r\n                                {options.map((option, idx) => (\r\n                                    <div className={'option option--' + option.backgroundColor}\r\n                                        key={idx}\r\n                                        onClick={() => {\r\n                                            onAction(option.stateLabel)\r\n                                            showHideMenu(false)\r\n                                        }}\r\n                                    >{option.optionName}</div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )\r\n            case 'menu':\r\n                return (\r\n                    <div className={'select-wrapper select-wrapper--' + className}>\r\n                        <button\r\n                            onClick={() => showHideMenu(!isMenuShown)}\r\n                            className={classname}\r\n                        >:</button>\r\n                        {isMenuShown && (\r\n                        <div className='options' ref={ref}>\r\n                            {options.map((option, idx) => (\r\n                                <div className={'option option--' + option.backgroundColor}\r\n                                    key={idx}\r\n                                    onClick={() => onAction(option.action) || showHideMenu(false)}\r\n                                >{option.optionName}</div>\r\n                            ))}\r\n                        </div>)\r\n                        }\r\n                    </div>\r\n                )\r\n            default:\r\n                return <div>not found</div>\r\n        }\r\n    };\r\n\r\n    return renderSelect()\r\n}\r\n\r\nexport default Select;","import {goalStatuses, labels, moreActions} from './constants';\r\n\r\nconst generateNewGoal = ({groupOrder, listOrder, title, categoryId}) => ({\r\n    title,\r\n    categoryId,\r\n    groupOrder,\r\n    listOrder,\r\n    actionItems: [],\r\n    label: labels[3],\r\n    modifiers: {\r\n        closed: false,\r\n        done: false\r\n    },\r\n    id: Date.now(),\r\n    goalDetails: {\r\n        start: '',\r\n        deadline: '',\r\n        finish: '',\r\n        successCriteria: [],\r\n        attachments: []\r\n    }\r\n});\r\n\r\nconst generateNewCriteria = (title) => ({\r\n    title,\r\n    isCompleted: false,\r\n    id: Date.now()\r\n})\r\n\r\nconst generateNewCategory = (name) => ({\r\n    name,\r\n    isCollapsed: true,\r\n    id: Date.now()\r\n})\r\n\r\nconst toggleCollapseCategory = (state, categoryId) => {\r\n    const categoryIdx = state.categories.findIndex(category => category.id === +categoryId);\r\n    return {\r\n        ...state,\r\n        categories: [\r\n            ...state.categories.slice(0, categoryIdx),\r\n            {\r\n                ...state.categories[categoryIdx],\r\n                isCollapsed: !state.categories[categoryIdx].isCollapsed\r\n            },\r\n            ...state.categories.slice(categoryIdx+1),\r\n        ]\r\n    };\r\n}\r\n\r\nconst changeGoalProperty = (state, payload, propName) => {\r\n    const {goals} = state;\r\n    return {\r\n        ...state,\r\n        goals: goals.map((goal) => {\r\n            if(goal.id === +payload.goalId) {\r\n                goal[propName] = payload[propName]\r\n            }\r\n            return goal\r\n        })\r\n    };\r\n};\r\n\r\nconst getGoalHeaderConfig = (goal, actions) => {\r\n    const {label, modifiers} = goal;\r\n    return [\r\n        {\r\n            actionsType: 'labelSelect',\r\n            selectHeader: ' ',\r\n            backgroundColor: label.backgroundColor,\r\n            options: labels,\r\n            className: 'labels',\r\n            type: 'multiselect'\r\n        },\r\n        {\r\n            actionsType: 'statusSelect',\r\n            options: goalStatuses,\r\n            modifiers: modifiers,\r\n            className: 'status',\r\n            type: 'select'\r\n        },\r\n        {\r\n            actionsType: 'moreActions',\r\n            selectHeader: ':',\r\n            backgroundColor: 'transparent',\r\n            options: moreActions,\r\n            className: 'edit',\r\n            type: 'menu'\r\n        }\r\n    ].map((select) => ({...select, onAction: actions[select.actionsType]}))\r\n}\r\n\r\nexport {\r\n    generateNewGoal,\r\n    toggleCollapseCategory,\r\n    getGoalHeaderConfig,\r\n    changeGoalProperty,\r\n    generateNewCriteria,\r\n    generateNewCategory\r\n}","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Select from '../../../reusable/select';\r\nimport EditInput from '../../../reusable/edit_input';\r\n\r\nimport {getGoalHeaderConfig} from '../../dashboard/reducer/helper';\r\nimport {changeGoalStatus, deleteGoal, renameGoal} from '../../dashboard/reducer/actions';\r\n\r\nconst GoalHeader = (props) => {\r\n    const {\r\n        goal,\r\n        renameGoal,\r\n        deleteGoal,\r\n        changeGoalStatus,\r\n        showHideGoal,\r\n        isGoalCollapsed\r\n    } = props;\r\n\r\n    const {id, modifiers} = goal;\r\n\r\n    const [isEditingName, toggleEditingName] = useState(false);\r\n\r\n    const selectsActions = {\r\n        statusSelect: (status) => changeGoalStatus(id, status),\r\n        moreActions: (actionName) => {\r\n            switch(actionName) {\r\n                case 'EDIT_GOAL_NAME':\r\n                    toggleEditingName(true);\r\n                    break;\r\n                case 'ADD_ACTION_ITEM':\r\n                    console.log('add action item');\r\n                    break;\r\n                case 'ARCHIVE_GOAL':\r\n                    console.log('ARCHIVE_GOAL');\r\n                    break;\r\n                case 'DELETE_GOAL':\r\n                    deleteGoal(id)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectsConfig = getGoalHeaderConfig(goal, selectsActions);\r\n\r\n    const toggleGoalStatus = () => {\r\n        changeGoalStatus(id, modifiers.done ? 'planned' : 'done')\r\n    }\r\n\r\n    const toggleEditingGoalName = (e) => {\r\n        e.stopPropagation();\r\n        toggleEditingName(true)\r\n    }\r\n\r\n    return (\r\n        <div className='goal-header'>\r\n            <div className='done-checkbox'>\r\n                <input\r\n                    type='checkbox'\r\n                    checked={modifiers.done}\r\n                    onChange={() => toggleGoalStatus()}\r\n                />\r\n            </div>\r\n            <div className='goal-title'>\r\n            {isEditingName ? (\r\n                <EditInput\r\n                    applyFieldName={(title) => renameGoal(id, title)}\r\n                    endEditing={() => toggleEditingName(false)}\r\n                    title={goal.title}\r\n                />\r\n            ) : (\r\n                <div onClick={() => showHideGoal(!isGoalCollapsed)} >\r\n                    <p>{goal.title}<button onClick={toggleEditingGoalName}>‚úé</button></p>\r\n                </div>\r\n            )}\r\n            </div>\r\n            {isGoalCollapsed && <div>Add action item</div>}\r\n            {selectsConfig.map((config, idx) => <Select {...goal} isGoalCollapsed={isGoalCollapsed} {...config} key={idx}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        deleteGoal,\r\n        changeGoalStatus,\r\n        renameGoal\r\n    }, dispatch)\r\n}\r\nexport default connect(null, mapDispatchToProps)(GoalHeader);","import React, {useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport GoalDetails from './components/goal_details';\r\nimport GoalHeader from './components/goal_header';\r\n\r\nimport {\r\n    changeTimestamp,\r\n    renameCriteria,\r\n    deleteCriteria,\r\n    createCriteria,\r\n    toggleCriteria–°ompletion\r\n} from '../dashboard/reducer/actions';\r\n\r\nconst Goal = (props) => {\r\n    const {\r\n        goal,\r\n        changeTimestamp,\r\n        renameCriteria,\r\n        deleteCriteria,\r\n        createCriteria,\r\n        toggleCriteria–°ompletion\r\n    } = props;\r\n\r\n    const {actionItems, id:goalId, goalDetails, modifiers} = goal;\r\n    const [isGoalCollapsed, showHideGoal] = useState(true);\r\n\r\n    const goalClasses = classNames(\r\n        'goal',\r\n        {\r\n            'goal-opened': !isGoalCollapsed,\r\n            'goal--canceled': modifiers.canceled,\r\n            'goal--done': modifiers.done,\r\n            'goal--planned_inprogress': !modifiers.canceled && !modifiers.done\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div className={goalClasses}>\r\n            <GoalHeader\r\n                goal={goal}\r\n                isGoalCollapsed={isGoalCollapsed}\r\n                showHideGoal={showHideGoal}\r\n            />\r\n            {!isGoalCollapsed && (\r\n                <GoalDetails\r\n                    goalDetails={goalDetails}\r\n                    changeTimestamp={(name, value) => changeTimestamp(goalId, name, value)}\r\n                    renameCriteria={(criteriaId, title) => renameCriteria(goalId, criteriaId, title)}\r\n                    deleteCriteria={(criteriaId) => deleteCriteria(goalId, criteriaId)}\r\n                    createCriteria={(title) => createCriteria(goalId, title)}\r\n                    toggleCriteria–°ompletion={(criteriaId) => toggleCriteria–°ompletion(goalId, criteriaId)}\r\n                />\r\n            )}\r\n            <ul>\r\n                {actionItems.map((item, idx) => <li key={idx}>{item}</li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        changeTimestamp,\r\n        renameCriteria,\r\n        deleteCriteria,\r\n        createCriteria,\r\n        toggleCriteria–°ompletion\r\n    }, dispatch)\r\n}\r\nexport default connect(null, mapDispatchToProps)(Goal);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {toggleCollapseCategory} from './reducer/actions';\r\n\r\nimport Goal from '../goal/goal';\r\n\r\nconst GoalCategories = (props) => {\r\n    const {\r\n        categories,\r\n        viewBy,\r\n        goals,\r\n        toggleCollapseCategory\r\n    } = props;\r\n\r\n    const renderGoalsByCategories = (category) => {\r\n        const {name, isCollapsed, id:categoryId} = category;\r\n        const filteredGoals = goals.filter(goal => goal.categoryId === +categoryId);\r\n        return (\r\n            <div key={categoryId} className='category'>\r\n                <div\r\n                    onClick={() => toggleCollapseCategory(categoryId)}\r\n                    className='category-name'\r\n                ><p>{name} - {filteredGoals.length}</p><div className='cross-line'/><i className='delete-category'>&#10007;</i></div>\r\n                {!isCollapsed && filteredGoals.map((goal) => <Goal key={goal.id} goal={goal}/>)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderDashboard = () => {\r\n        switch(viewBy) {\r\n            case 'groups':\r\n                return categories.map(renderGoalsByCategories);\r\n            case 'freeList':\r\n                return goals.map((goal) => <Goal {...props} goal={goal} key={goal.id}/>)\r\n            default:\r\n                return <div>not found</div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='dashboard'>\r\n            {renderDashboard()}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    categories: state.dashboard.categories,\r\n    viewBy: state.dashboard.viewBy,\r\n    goals: state.dashboard.goals\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        toggleCollapseCategory\r\n    }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GoalCategories);","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport EditInput from '../../../reusable/edit_input';\r\n\r\nimport {\r\n    addGoal,\r\n    discardGoalCreation,\r\n    toggleFilters,\r\n    changeGoalTitle,\r\n    changeGoalCategory,\r\n    createGoal,\r\n    changeView,\r\n    createCategory\r\n} from '../reducer/actions';\r\n\r\nconst FilterControls = (props) => {\r\n    const {\r\n        showGoalCreation,\r\n        showFilters,\r\n        goalCreation,\r\n        categories,\r\n\r\n        addGoal,\r\n        discardGoalCreation,\r\n        toggleFilters,\r\n        changeGoalTitle,\r\n        changeGoalCategory,\r\n        createGoal,\r\n        changeView,\r\n        createCategory\r\n    } = props;\r\n\r\n    const {title, categoryId} = goalCreation;\r\n\r\n    const [showGroupCreating, showHideGroupCreating] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <div className='filter-controls'>\r\n                <div className='goal-creation'>\r\n                    {showGoalCreation ? (\r\n                        <>\r\n                            <input\r\n                                type='text'\r\n                                className='add-goal-area'\r\n                                placeholder='Type a goal'\r\n                                onChange={(e) => changeGoalTitle(e.target.value)}\r\n                                value={title}\r\n                            />\r\n                            <div className='actions'>\r\n                                <button disabled={!title.length || !categoryId} onClick={() => createGoal(title, categoryId)}>‚úì</button>\r\n                                <button onClick={() => discardGoalCreation()}>‚úï</button>\r\n                            </div>\r\n                            <select onChange={(e) => changeGoalCategory(e.target.value)}>\r\n                                <option disabled selected></option>\r\n                                {categories.map(({id, name}) => (\r\n                                    <option value={id} key={id}>{name}</option>\r\n                                ))}\r\n                            </select>\r\n                        </>\r\n                    ) : <button onClick={() => addGoal()} className='add-goal'>ADD GOAL</button>}\r\n                </div>\r\n                {showFilters ? (\r\n                    <button onClick={() => toggleFilters()}>hide filters</button>\r\n                ) : <button onClick={() => toggleFilters()}>show filters</button>}\r\n                <button onClick={() => showHideGroupCreating(!showGroupCreating)}>Add group</button>\r\n                <div className='view-by'>\r\n                    <p>View by:</p>\r\n                    <select onChange={(e) => changeView(e.target.value)}>\r\n                        <option value='groups'>Groups</option>\r\n                        <option value='freeList'>Free list</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            {showGroupCreating && (\r\n                <EditInput\r\n                    applyFieldName={(categoryName) => createCategory(categoryName)}\r\n                    endEditing={() => showHideGroupCreating(false)}\r\n                    showActionButtons\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    showGoalCreation: state.dashboard.showGoalCreation,\r\n    showFilters: state.dashboard.showFilters,\r\n    goalCreation: state.dashboard.goalCreation,\r\n    categories: state.dashboard.categories\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        addGoal,\r\n        discardGoalCreation,\r\n        toggleFilters,\r\n        changeGoalTitle,\r\n        createGoal,\r\n        changeGoalCategory,\r\n        changeView,\r\n        createCategory\r\n    }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterControls);","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux'\n\nimport Dashboard from '../components/dashboard/dashboard';\nimport FilterControls from '../components/dashboard/components/filter_controls';\n\nconst Root = ({state}) => {\n  useEffect(() => {\n    window.localStorage.setItem('grow', JSON.stringify(state))\n  }, [state])\n\n  return (\n    <div className='main'>\n        <FilterControls />\n        <Dashboard />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({state})\n\nexport default connect(mapStateToProps)(Root);\n","\r\nconst RootReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default RootReducer;","import {actionConstants} from './constants';\r\nimport {generateNewGoal, toggleCollapseCategory, changeGoalProperty, generateNewCriteria, generateNewCategory} from './helper';\r\n\r\nconst initialModifiersState = {\r\n    closed: false,\r\n    done: false\r\n};\r\n\r\nconst filterControlsInitialState = {\r\n    showGoalCreation: false,\r\n    showFilters: false,\r\n    goalCreation: {\r\n        title: '',\r\n        categoryId: null,\r\n    }\r\n}\r\n\r\nconst goalCategoriesState = {\r\n    categories: [],\r\n    goals: [],\r\n    viewBy: 'groups'\r\n}\r\n\r\nconst initialState = {\r\n    ...filterControlsInitialState,\r\n    ...goalCategoriesState\r\n}\r\n\r\nconst DashboardReducer = (state = initialState, action) => {\r\n    const {type, payload} = action;\r\n    switch(type) {\r\n        case actionConstants.CREATE_GOAL:\r\n            const groupOrder = state.goals.filter(goal => goal.categoryId === +payload.categoryId).length;\r\n            const listOrder = state.goals.length + 1;\r\n            return {\r\n                ...state,\r\n                goals: [...state.goals, generateNewGoal({...payload, groupOrder, listOrder})],\r\n                categories: state.categories.map(category => {\r\n                    if(category.id === +payload.categoryId) {\r\n                        category.isCollapsed = false\r\n                    }\r\n                    return category;\r\n                }),\r\n                ...filterControlsInitialState\r\n            };\r\n        case actionConstants.TOGGLE_COLLAPSE_CATEGORY:\r\n            return toggleCollapseCategory(state, payload)\r\n        case actionConstants.CHANGE_GOAL_STATUS:\r\n            return {\r\n                ...state,\r\n                goals: state.goals.map((goal) => {\r\n                    if(goal.id === +payload.goalId) {\r\n                        goal = Object.assign({}, goal);\r\n                        goal.modifiers = {\r\n                            ...initialModifiersState,\r\n                            [payload.status]: true\r\n                        }\r\n                    }\r\n                    return goal;\r\n                })\r\n            };\r\n        case actionConstants.DELETE_GOAL:\r\n            return {\r\n                ...state,\r\n                goals: state.goals.filter(goal => goal.id !== +payload.goalId)\r\n            }\r\n        case actionConstants.RENAME_GOAL:\r\n            return changeGoalProperty(state, payload, 'title')\r\n        case actionConstants.CHANGE_TIMESTAMP:\r\n            return {\r\n                ...state,\r\n                goals: state.goals.map(goal => {\r\n                    if(goal.id === +payload.goalId) {\r\n                        goal.goalDetails[payload.name] = [payload.value]\r\n                    }\r\n                    return goal;\r\n                })\r\n            }\r\n        case actionConstants.RENAME_CRITERIA:\r\n            return {\r\n                ...state,\r\n                goals: state.goals.map(goal => {\r\n                    if(goal.id === +payload.goalId) {\r\n                        goal.goalDetails.successCriteria = goal.goalDetails.successCriteria.map(criteria => {\r\n                            if(criteria.id === +payload.criteriaId) {\r\n                                criteria.title = payload.title\r\n                            }\r\n                            return criteria;\r\n                        })\r\n                    }\r\n                    return goal\r\n                })\r\n            }\r\n        case actionConstants.DELETE_CRITERIA:\r\n            return {\r\n                ...state,\r\n                goals: state.goals.map(goal => {\r\n                    if(goal.id === +payload.goalId) {\r\n                        goal = Object.assign({}, goal);\r\n                        goal.goalDetails.successCriteria = goal.goalDetails.successCriteria.filter(criteria => criteria.id !== +payload.criteriaId);\r\n                    }\r\n                    return goal;\r\n                })\r\n            }\r\n        case actionConstants.CREATE_CRITERIA:\r\n            return {\r\n                ...state,\r\n                goals: state.goals.map(goal => {\r\n                    if(goal.id === +payload.goalId) {\r\n                        goal.goalDetails.successCriteria = [...goal.goalDetails.successCriteria, generateNewCriteria(payload.title)]\r\n                    }\r\n                    return goal;\r\n                })\r\n            }\r\n        case actionConstants.TOGGLE_CRITERIA_COMPLETION:\r\n            return {\r\n                ...state,\r\n                goals: state.goals.map(goal => {\r\n                    if(goal.id === +payload.goalId) {\r\n                        goal = Object.assign({}, goal);\r\n                        goal.goalDetails.successCriteria = goal.goalDetails.successCriteria.map(criteria => {\r\n                            if(criteria.id !== +payload.criteriaId) return criteria;\r\n                            return {\r\n                                ...criteria,\r\n                                isCompleted: !criteria.isCompleted\r\n                            }\r\n                        })\r\n                    }\r\n                    return goal;\r\n                })\r\n            }\r\n        case actionConstants.CREATE_CATEGORY:\r\n            return {\r\n                ...state,\r\n                categories: [...state.categories, generateNewCategory(payload)]\r\n            }\r\n        case actionConstants.ADD_GOAL:\r\n            return {\r\n                ...state,\r\n                showFilters: false,\r\n                showGoalCreation: true\r\n            };\r\n        case actionConstants.DISCARD_GOAL_CREATION:\r\n            return {\r\n                ...state,\r\n                ...filterControlsInitialState\r\n            };\r\n        case actionConstants.TOGGLE_FILTERS:\r\n            return {\r\n                ...state,\r\n                showGoalCreation: false,\r\n                showFilters: !state.showFilters\r\n            };\r\n        case actionConstants.CHANGE_GOAL_TITLE:\r\n            return {\r\n                ...state,\r\n                goalCreation: {\r\n                    ...state.goalCreation,\r\n                    title: action.payload\r\n                },\r\n            };\r\n        case actionConstants.CHANGE_GOAL_CATEGORY:\r\n            return {\r\n                ...state,\r\n                goalCreation: {\r\n                    ...state.goalCreation,\r\n                    categoryId: action.payload\r\n                },\r\n            };\r\n        case actionConstants.CHANGE_VIEW:\r\n            return {\r\n                ...state,\r\n                viewBy: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default DashboardReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './root/root';\nimport './index.scss';\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport root from './root/reducer/reducer';\nimport dashboard from './components/dashboard/reducer/reducer';\n\nconst middlewares = [thunkMiddleware];\n\nconst initialState = {}\n\nconst store = createStore(\n  combineReducers({\n    root,\n    dashboard\n  }),\n  JSON.parse(window.localStorage.getItem('grow')) || initialState,\n  applyMiddleware(...middlewares)\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Root />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}