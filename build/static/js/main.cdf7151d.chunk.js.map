{"version":3,"sources":["components/dashboard/reducer/constants.js","components/dashboard/reducer/actions.js","components/goal/constants/configs.js","components/goal/components/goal_date_timestamps.jsx","reusable/clickOutside.js","reusable/edit_input.jsx","components/goal/components/goal_success_criteria.jsx","components/goal/components/goal_details.jsx","reusable/select.jsx","components/dashboard/reducer/helper.js","components/goal/components/goal_header.jsx","components/goal/goal.jsx","components/dashboard/dashboard.jsx","components/dashboard/components/filter_controls.jsx","root/root.jsx","root/reducer/reducer.js","components/dashboard/reducer/reducer.js","index.js"],"names":["actionConstants","labels","backgroundColor","optionName","goalStatuses","selectedName","stateLabel","moreActions","action","toggleCollapseCategory","categoryId","type","payload","deleteCategory","changeGoalStatus","goalId","status","deleteGoal","renameGoal","title","changeTimestamp","name","value","renameCriteria","criteriaId","deleteCriteria","createCriteria","toggleCriteria–°ompletion","addGoal","discardGoalCreation","toggleFilters","changeGoalTitle","changeGoalCategory","createGoal","changeView","viewBy","createCategory","timestampsConfig","label","GoalDateTimestamps","goalDetails","className","map","idx","defaultValue","onChange","target","useOutsideClick","ref","callback","handleClick","e","current","contains","useEffect","document","addEventListener","removeEventListener","EditInput","props","applyFieldName","endEditing","showActionButtons","placeholder","nameInputRef","useRef","applyChanges","trim","select","onClick","GoalSuccessCriteria","console","log","successCriteria","useState","isCreatingCriteria","toggleCriteriaCreating","Criteria","isCompleted","id","isEditingCriteria","showHideEditing","checked","criteria","key","GoalDetails","attachments","Select","onAction","modifiers","options","isGoalCollapsed","isMenuShown","showHideMenu","selectedOption","find","option","classname","classNames","renderSelect","generateNewGoal","groupOrder","listOrder","actionItems","closed","done","Date","now","start","deadline","finish","generateNewCriteria","generateNewCategory","isCollapsed","state","categoryIdx","categories","findIndex","category","slice","changeGoalProperty","propName","goals","goal","connect","dispatch","bindActionCreators","showHideGoal","isEditingName","toggleEditingName","selectsConfig","actions","actionsType","selectHeader","getGoalHeaderConfig","statusSelect","actionName","stopPropagation","config","goalClasses","canceled","item","dashboard","renderGoalsByCategories","filteredGoals","filter","length","removeCategory","renderDashboard","showGoalCreation","showFilters","goalCreation","showGroupCreating","showHideGroupCreating","disabled","selected","categoryName","window","localStorage","setItem","JSON","stringify","RootReducer","initialModifiersState","filterControlsInitialState","initialState","DashboardReducer","Object","assign","middlewares","thunkMiddleware","store","createStore","combineReducers","root","parse","getItem","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cdf7151d.chunk.js","sourcesContent":["export const actionConstants = {\r\n    CREATE_GOAL: 'CREATE_GOAL',\r\n    CREATE_CATEGORY: 'CREATE_CATEGORY',\r\n    TOGGLE_COLLAPSE_GOAL: 'TOGGLE_COLLAPSE_GOAL',\r\n    TOGGLE_COLLAPSE_CATEGORY: 'TOGGLE_COLLAPSE_CATEGORY',\r\n    DELETE_CATEGORY: 'DELETE_CATEGORY',\r\n    CHANGE_GOAL_STATUS: 'CHANGE_GOAL_STATUS',\r\n    DELETE_GOAL: 'DELETE_GOAL',\r\n    RENAME_GOAL: 'RENAME_GOAL',\r\n    CHANGE_TIMESTAMP: 'CHANGE_TIMESTAMP',\r\n    RENAME_CRITERIA: 'RENAME_CRITERIA',\r\n    DELETE_CRITERIA: 'DELETE_CRITERIA',\r\n    CREATE_CRITERIA: 'CREATE_CRITERIA',\r\n    TOGGLE_CRITERIA_COMPLETION: 'TOGGLE_CRITERIA_COMPLETION',\r\n    \r\n    ADD_GOAL: 'ADD_GOAL',\r\n    DISCARD_GOAL_CREATION: 'DISCARD_GOAL_CREATION',\r\n    TOGGLE_FILTERS: 'TOGGLE_FILTERS',\r\n    CHANGE_GOAL_TITLE: 'CHANGE_GOAL_TITLE',\r\n    CHANGE_GOAL_CATEGORY: 'CHANGE_GOAL_CATEGORY',\r\n    CHANGE_VIEW: 'CHANGE_VIEW',\r\n}\r\n\r\nexport const labels = [\r\n   {\r\n    backgroundColor: 'red',\r\n    optionName: 'Label 1'\r\n   },\r\n   {\r\n    backgroundColor: 'yellow',\r\n    optionName: 'Label 2'\r\n   },\r\n   {\r\n    backgroundColor: 'limegreen',\r\n    optionName: 'Label 3'\r\n   }, \r\n   {\r\n    backgroundColor: 'turquoise',\r\n    optionName: 'Label 4'\r\n   }\r\n];\r\n\r\nexport const goalStatuses = [\r\n   {\r\n    backgroundColor: 'blue',\r\n    optionName: 'Planned',\r\n    selectedName: 'PLANNED',\r\n    stateLabel: 'planned'\r\n   },\r\n   {\r\n    backgroundColor: 'blue',\r\n    optionName: 'In progress',\r\n    selectedName: 'IN PROGRESS',\r\n    stateLabel: 'inProgress'\r\n   },\r\n   {\r\n    backgroundColor: 'green',\r\n    optionName: 'Done',\r\n    selectedName: 'DONE',\r\n    stateLabel: 'done'\r\n   },\r\n   {\r\n    backgroundColor: 'gray',\r\n    optionName: 'Canceled',\r\n    selectedName: 'CANCELED',\r\n    stateLabel: 'canceled'\r\n   }\r\n];\r\n\r\n export const moreActions = [\r\n   {\r\n    optionName: 'Edit name',\r\n    action: 'EDIT_GOAL_NAME'\r\n   },\r\n   {\r\n    optionName: 'Add action item',\r\n    action: 'ADD_ACTION_ITEM'\r\n   },\r\n   {\r\n    optionName: 'Archive',\r\n    action: 'ARCHIVE_GOAL'\r\n   },\r\n   {\r\n    optionName: 'Delete',\r\n    action: 'DELETE_GOAL'\r\n   }\r\n]","import {actionConstants} from './constants';\r\n\r\nconst toggleCollapseCategory = (categoryId) => ({type: actionConstants.TOGGLE_COLLAPSE_CATEGORY, payload: categoryId})\r\n\r\nconst deleteCategory = (categoryId) => ({type: actionConstants.DELETE_CATEGORY, payload: categoryId})\r\n\r\nconst changeGoalStatus = (goalId, status) => ({type: actionConstants.CHANGE_GOAL_STATUS, payload: {goalId, status}})\r\n\r\nconst deleteGoal = (goalId) => ({type: actionConstants.DELETE_GOAL, payload: {goalId}})\r\n\r\nconst renameGoal = (goalId, title) => ({type: actionConstants.RENAME_GOAL, payload: {goalId, title}})\r\n\r\nconst changeTimestamp = (goalId, name, value) => ({type: actionConstants.CHANGE_TIMESTAMP, payload: {goalId, name, value}})\r\n\r\nconst renameCriteria = (goalId, criteriaId, title) => ({type: actionConstants.RENAME_CRITERIA, payload: {goalId, criteriaId, title}})\r\n\r\nconst deleteCriteria = (goalId, criteriaId) => ({type: actionConstants.DELETE_CRITERIA, payload: {goalId, criteriaId}})\r\n\r\nconst createCriteria = (goalId, title) => ({type: actionConstants.CREATE_CRITERIA, payload: {goalId, title}})\r\n\r\nconst toggleCriteria–°ompletion = (goalId, criteriaId) => ({type: actionConstants.TOGGLE_CRITERIA_COMPLETION, payload: {goalId, criteriaId}})\r\n\r\nconst addGoal = () => ({type: actionConstants.ADD_GOAL});\r\n\r\nconst discardGoalCreation = () => ({type: actionConstants.DISCARD_GOAL_CREATION});\r\n\r\nconst toggleFilters = () => ({type: actionConstants.TOGGLE_FILTERS});\r\n\r\nconst changeGoalTitle = (title) => ({type: actionConstants.CHANGE_GOAL_TITLE, payload: title})\r\n\r\nconst changeGoalCategory = (categoryId) => ({type: actionConstants.CHANGE_GOAL_CATEGORY, payload: +categoryId})\r\n\r\nconst createGoal = (title, categoryId) => ({type: actionConstants.CREATE_GOAL, payload: {title, categoryId}});\r\n\r\nconst changeView = (viewBy) => ({type: actionConstants.CHANGE_VIEW, payload: viewBy})\r\n\r\nconst createCategory = (name) => ({type: actionConstants.CREATE_CATEGORY, payload: name})\r\n\r\nexport {\r\n    renameGoal,\r\n    deleteGoal,\r\n    toggleCollapseCategory,\r\n    changeGoalStatus,\r\n    changeTimestamp,\r\n    renameCriteria,\r\n    deleteCriteria,\r\n    createCriteria,\r\n    toggleCriteria–°ompletion,\r\n    addGoal,\r\n    discardGoalCreation,\r\n    toggleFilters,\r\n    changeGoalTitle,\r\n    changeGoalCategory,\r\n    createGoal,\r\n    changeView,\r\n    createCategory,\r\n    deleteCategory\r\n}","export const timestampsConfig = [\r\n    {\r\n        name: 'start',\r\n        label: 'Start'\r\n    },\r\n    {\r\n        name: 'deadline',\r\n        label: 'Deadline'\r\n    },\r\n    {\r\n        name: 'finish',\r\n        label: 'Finish'\r\n    }\r\n]","import React from 'react';\r\nimport {timestampsConfig} from '../constants/configs';\r\n\r\nconst GoalDateTimestamps = ({goalDetails, changeTimestamp}) => (\r\n    <div className='goal-details-timestamps'>\r\n        {timestampsConfig.map(({name, label}, idx) => (\r\n            <label key={idx}>{label}: \r\n                <input\r\n                    type='date'\r\n                    defaultValue={goalDetails[name]}\r\n                    name={name}\r\n                    onChange={({target : {name, value}}) => changeTimestamp(name, value)}\r\n                />\r\n            </label>\r\n        ))}\r\n    </div>\r\n)\r\n\r\nexport default GoalDateTimestamps;","import { useEffect } from \"react\";\r\n\r\nconst useOutsideClick = (ref, callback) => {\r\n  const handleClick = e => {\r\n    if (ref.current && !ref.current.contains(e.target)) {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClick);\r\n    };\r\n  });\r\n};\r\n\r\nexport default useOutsideClick;","import React, {useEffect, useRef} from 'react';\r\n\r\nimport useOutsideClick from './clickOutside';\r\n\r\nconst EditInput = (props) => {\r\n    const {\r\n        title = '',\r\n        applyFieldName,\r\n        endEditing,\r\n        showActionButtons,\r\n        placeholder\r\n    } = props;\r\n\r\n    const nameInputRef = useRef();\r\n\r\n    const applyChanges = () => {\r\n        if(nameInputRef.current.value.trim()) {\r\n            applyFieldName(nameInputRef.current.value)\r\n            endEditing();\r\n        }\r\n    }\r\n\r\n    useOutsideClick(nameInputRef, () => applyChanges());\r\n\r\n    useEffect(() => {\r\n        nameInputRef.current && nameInputRef.current.select()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='edit'>\r\n            <input type='text' ref={nameInputRef} defaultValue={title} className='edit-input' placeholder={placeholder} />\r\n            {showActionButtons && (\r\n                <>\r\n                    <button onClick={() => applyChanges()}>‚úì</button>\r\n                    <button onClick={() => endEditing()}>‚úï</button>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditInput;","import React, {useState} from 'react';\r\n\r\nimport EditInput from '../../../reusable/edit_input';\r\n\r\nconst GoalSuccessCriteria = (props) => {\r\n    const {\r\n        deleteCriteria,\r\n        renameCriteria,\r\n        toggleCriteria–°ompletion,\r\n        createCriteria,\r\n        goalDetails\r\n    } = props;\r\n\r\n    console.log(props);\r\n\r\n    const {successCriteria} = goalDetails;\r\n    const [isCreatingCriteria, toggleCriteriaCreating] = useState(false);\r\n\r\n    const Criteria = ({isCompleted, title, id:criteriaId}) => {\r\n        const [isEditingCriteria, showHideEditing] = useState(false);\r\n        return (\r\n            <div className='success-criteria'>\r\n                <input type='checkbox' checked={isCompleted} onChange={() => toggleCriteria–°ompletion(criteriaId)}/>\r\n                {isEditingCriteria ? (\r\n                    <EditInput\r\n                        title={title}\r\n                        applyFieldName={(title) => renameCriteria(criteriaId, title)}\r\n                        endEditing={() => showHideEditing(false)}\r\n                        showActionButtons\r\n                    />\r\n                ) : (\r\n                    <>\r\n                        <p className='success-criteria-title'>{title}</p>\r\n                        <div className='success-criteria-actions'>\r\n                            <button onClick={() => showHideEditing(true)}>‚úé</button>\r\n                            <button onClick={() => deleteCriteria(criteriaId)}>üóë</button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className='criterias'>\r\n            <div className='criterias-title'>\r\n                <p>SUCCESS CRITERIA</p>\r\n                <button onClick={() => toggleCriteriaCreating(true)}>Add criteria</button>\r\n            </div>\r\n            {successCriteria.map((criteria, idx) => <Criteria {...criteria} key={idx} />)}\r\n            {isCreatingCriteria && (\r\n                <EditInput\r\n                    applyFieldName={(title) => createCriteria(title)}\r\n                    endEditing={() => toggleCriteriaCreating(false)}\r\n                    placeholder='Edit success criteria'\r\n                    showActionButtons\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoalSuccessCriteria;","import React from 'react';\r\n\r\nimport GoalDateTimestamps from './goal_date_timestamps';\r\nimport GoalSuccessCriteria from './goal_success_criteria';\r\n\r\nconst GoalDetails = (props) => {\r\n    const {\r\n        goalDetails\r\n    } = props;\r\n    \r\n    const {attachments} = goalDetails;\r\n\r\n    return (\r\n        <div className='goal-details'>\r\n            <GoalDateTimestamps {...props}/>\r\n            <GoalSuccessCriteria {...props}/>\r\n            {attachments.map((criteria, idx) => (\r\n                <div>\r\n                    123\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoalDetails;","import React, {useState, useRef} from 'react';\r\nimport classNames from 'classnames';\r\nimport useOutsideClick from './clickOutside';\r\n\r\nconst Select = (props) => {\r\n    const {\r\n        onAction,\r\n        modifiers,\r\n        type,\r\n        className,\r\n        options,\r\n        isGoalCollapsed\r\n    } = props;\r\n\r\n    const ref = useRef();\r\n\r\n    const [isMenuShown, showHideMenu] = useState(false);\r\n\r\n    const selectedOption = options.find((option) => modifiers[option.stateLabel]) || options[0];\r\n\r\n    const classname = classNames(\r\n        'select-header',\r\n        `select-header-${selectedOption.backgroundColor}`,\r\n        {\r\n            [`select-header-${selectedOption.backgroundColor}-opened`]: (isMenuShown || !isGoalCollapsed)\r\n        }\r\n    )\r\n\r\n    useOutsideClick(ref, () => isMenuShown && showHideMenu(false))\r\n\r\n    const renderSelect = () => {\r\n        switch(type) {\r\n            case 'multiselect':\r\n                return (\r\n                    <div className={'select-wrapper select-wrapper--' + className}>\r\n                        <button\r\n                            onClick={() => showHideMenu(!isMenuShown)}\r\n                            className={classname}\r\n                        >{selectedOption.selectedName}</button>\r\n                        {isMenuShown && (\r\n                            <div className='options' ref={ref}>\r\n                                {options.map((option, idx) => (\r\n                                    <div className={'option option--' + option.backgroundColor}\r\n                                        key={idx}\r\n                                        onClick={() => onAction(option.stateLabel) || showHideMenu(false)}\r\n                                    >{option.optionName}</div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )\r\n            case 'select':\r\n                return (\r\n                    <div className={'select-wrapper select-wrapper--' + className}>\r\n                        <button\r\n                            onClick={() => showHideMenu(!isMenuShown)}\r\n                            className={classname}\r\n                        >{selectedOption.selectedName}</button>\r\n                        {isMenuShown && (\r\n                            <div className='options' ref={ref}>\r\n                                {options.map((option, idx) => (\r\n                                    <div className={'option option--' + option.backgroundColor}\r\n                                        key={idx}\r\n                                        onClick={() => {\r\n                                            onAction(option.stateLabel)\r\n                                            showHideMenu(false)\r\n                                        }}\r\n                                    >{option.optionName}</div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )\r\n            case 'menu':\r\n                return (\r\n                    <div className={'select-wrapper select-wrapper--' + className}>\r\n                        <button\r\n                            onClick={() => showHideMenu(!isMenuShown)}\r\n                            className={classname}\r\n                        >:</button>\r\n                        {isMenuShown && (\r\n                        <div className='options' ref={ref}>\r\n                            {options.map((option, idx) => (\r\n                                <div className={'option option--' + option.backgroundColor}\r\n                                    key={idx}\r\n                                    onClick={() => onAction(option.action) || showHideMenu(false)}\r\n                                >{option.optionName}</div>\r\n                            ))}\r\n                        </div>)\r\n                        }\r\n                    </div>\r\n                )\r\n            default:\r\n                return <div>not found</div>\r\n        }\r\n    };\r\n\r\n    return renderSelect()\r\n}\r\n\r\nexport default Select;","import {goalStatuses, labels, moreActions} from './constants';\r\n\r\nconst generateNewGoal = ({groupOrder, listOrder, title, categoryId}) => ({\r\n    title,\r\n    categoryId,\r\n    groupOrder,\r\n    listOrder,\r\n    actionItems: [],\r\n    label: labels[3],\r\n    modifiers: {\r\n        closed: false,\r\n        done: false\r\n    },\r\n    id: Date.now(),\r\n    goalDetails: {\r\n        start: '',\r\n        deadline: '',\r\n        finish: '',\r\n        successCriteria: [],\r\n        attachments: []\r\n    }\r\n});\r\n\r\nconst generateNewCriteria = (title) => ({\r\n    title,\r\n    isCompleted: false,\r\n    id: Date.now()\r\n})\r\n\r\nconst generateNewCategory = (name) => ({\r\n    name,\r\n    isCollapsed: true,\r\n    id: Date.now()\r\n})\r\n\r\nconst toggleCollapseCategory = (state, categoryId) => {\r\n    const categoryIdx = state.categories.findIndex(category => category.id === +categoryId);\r\n    return {\r\n        ...state,\r\n        categories: [\r\n            ...state.categories.slice(0, categoryIdx),\r\n            {\r\n                ...state.categories[categoryIdx],\r\n                isCollapsed: !state.categories[categoryIdx].isCollapsed\r\n            },\r\n            ...state.categories.slice(categoryIdx+1),\r\n        ]\r\n    };\r\n}\r\n\r\nconst changeGoalProperty = (state, payload, propName) => {\r\n    const {goals} = state;\r\n    return {\r\n        ...state,\r\n        goals: goals.map((goal) => {\r\n            if(goal.id === +payload.goalId) {\r\n                goal[propName] = payload[propName]\r\n            }\r\n            return goal\r\n        })\r\n    };\r\n};\r\n\r\nconst getGoalHeaderConfig = (goal, actions) => {\r\n    const {label, modifiers} = goal;\r\n    return [\r\n        {\r\n            actionsType: 'labelSelect',\r\n            selectHeader: ' ',\r\n            backgroundColor: label.backgroundColor,\r\n            options: labels,\r\n            className: 'labels',\r\n            type: 'multiselect'\r\n        },\r\n        {\r\n            actionsType: 'statusSelect',\r\n            options: goalStatuses,\r\n            modifiers: modifiers,\r\n            className: 'status',\r\n            type: 'select'\r\n        },\r\n        {\r\n            actionsType: 'moreActions',\r\n            selectHeader: ':',\r\n            backgroundColor: 'transparent',\r\n            options: moreActions,\r\n            className: 'edit',\r\n            type: 'menu'\r\n        }\r\n    ].map((select) => ({...select, onAction: actions[select.actionsType]}))\r\n}\r\n\r\nexport {\r\n    generateNewGoal,\r\n    toggleCollapseCategory,\r\n    getGoalHeaderConfig,\r\n    changeGoalProperty,\r\n    generateNewCriteria,\r\n    generateNewCategory\r\n}","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport Select from '../../../reusable/select';\r\nimport EditInput from '../../../reusable/edit_input';\r\n\r\nimport {getGoalHeaderConfig} from '../../dashboard/reducer/helper';\r\nimport {changeGoalStatus, deleteGoal, renameGoal} from '../../dashboard/reducer/actions';\r\n\r\nconst GoalHeader = (props) => {\r\n    const {\r\n        goal,\r\n        renameGoal,\r\n        deleteGoal,\r\n        changeGoalStatus,\r\n        showHideGoal,\r\n        isGoalCollapsed\r\n    } = props;\r\n\r\n    const {id, modifiers} = goal;\r\n\r\n    const [isEditingName, toggleEditingName] = useState(false);\r\n\r\n    const selectsActions = {\r\n        statusSelect: (status) => changeGoalStatus(id, status),\r\n        moreActions: (actionName) => {\r\n            switch(actionName) {\r\n                case 'EDIT_GOAL_NAME':\r\n                    toggleEditingName(true);\r\n                    break;\r\n                case 'ADD_ACTION_ITEM':\r\n                    console.log('add action item');\r\n                    break;\r\n                case 'ARCHIVE_GOAL':\r\n                    console.log('ARCHIVE_GOAL');\r\n                    break;\r\n                case 'DELETE_GOAL':\r\n                    deleteGoal(id)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectsConfig = getGoalHeaderConfig(goal, selectsActions);\r\n\r\n    const toggleGoalStatus = () => {\r\n        changeGoalStatus(id, modifiers.done ? 'planned' : 'done')\r\n    }\r\n\r\n    const toggleEditingGoalName = (e) => {\r\n        e.stopPropagation();\r\n        toggleEditingName(true)\r\n    }\r\n\r\n    return (\r\n        <div className='goal-header'>\r\n            <div className='done-checkbox'>\r\n                <input\r\n                    type='checkbox'\r\n                    checked={modifiers.done}\r\n                    onChange={() => toggleGoalStatus()}\r\n                />\r\n            </div>\r\n            <div className='goal-title'>\r\n            {isEditingName ? (\r\n                <EditInput\r\n                    applyFieldName={(title) => renameGoal(id, title)}\r\n                    endEditing={() => toggleEditingName(false)}\r\n                    title={goal.title}\r\n                />\r\n            ) : (\r\n                <div onClick={() => showHideGoal(!isGoalCollapsed)} >\r\n                    <p>{goal.title}<button onClick={toggleEditingGoalName}>‚úé</button></p>\r\n                </div>\r\n            )}\r\n            </div>\r\n            {isGoalCollapsed && <div>Add action item</div>}\r\n            {selectsConfig.map((config, idx) => <Select {...goal} isGoalCollapsed={isGoalCollapsed} {...config} key={idx}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        deleteGoal,\r\n        changeGoalStatus,\r\n        renameGoal\r\n    }, dispatch)\r\n}\r\nexport default connect(null, mapDispatchToProps)(GoalHeader);","import React, {useState} from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport GoalDetails from './components/goal_details';\r\nimport GoalHeader from './components/goal_header';\r\n\r\nimport {\r\n    changeTimestamp,\r\n    renameCriteria,\r\n    deleteCriteria,\r\n    createCriteria,\r\n    toggleCriteria–°ompletion\r\n} from '../dashboard/reducer/actions';\r\n\r\nconst Goal = (props) => {\r\n    const {\r\n        goal,\r\n        changeTimestamp,\r\n        renameCriteria,\r\n        deleteCriteria,\r\n        createCriteria,\r\n        toggleCriteria–°ompletion\r\n    } = props;\r\n\r\n    const {actionItems, id:goalId, goalDetails, modifiers} = goal;\r\n    const [isGoalCollapsed, showHideGoal] = useState(true);\r\n\r\n    const goalClasses = classNames(\r\n        'goal',\r\n        {\r\n            'goal-opened': !isGoalCollapsed,\r\n            'goal--canceled': modifiers.canceled,\r\n            'goal--done': modifiers.done,\r\n            'goal--planned_inprogress': !modifiers.canceled && !modifiers.done\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div className={goalClasses}>\r\n            <GoalHeader\r\n                goal={goal}\r\n                isGoalCollapsed={isGoalCollapsed}\r\n                showHideGoal={showHideGoal}\r\n            />\r\n            {!isGoalCollapsed && (\r\n                <GoalDetails\r\n                    goalDetails={goalDetails}\r\n                    changeTimestamp={(name, value) => changeTimestamp(goalId, name, value)}\r\n                    renameCriteria={(criteriaId, title) => renameCriteria(goalId, criteriaId, title)}\r\n                    deleteCriteria={(criteriaId) => deleteCriteria(goalId, criteriaId)}\r\n                    createCriteria={(title) => createCriteria(goalId, title)}\r\n                    toggleCriteria–°ompletion={(criteriaId) => toggleCriteria–°ompletion(goalId, criteriaId)}\r\n                />\r\n            )}\r\n            <ul>\r\n                {actionItems.map((item, idx) => <li key={idx}>{item}</li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        changeTimestamp,\r\n        renameCriteria,\r\n        deleteCriteria,\r\n        createCriteria,\r\n        toggleCriteria–°ompletion\r\n    }, dispatch)\r\n}\r\nexport default connect(null, mapDispatchToProps)(Goal);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\n\r\nimport {toggleCollapseCategory, deleteCategory} from './reducer/actions';\r\n\r\nimport Goal from '../goal/goal';\r\n\r\nconst GoalCategories = (props) => {\r\n    const {\r\n        categories,\r\n        viewBy,\r\n        goals,\r\n        toggleCollapseCategory,\r\n        deleteCategory\r\n    } = props;\r\n\r\n    const removeCategory = (e, categoryId) => {\r\n        e.stopPropagation();\r\n        deleteCategory(categoryId)\r\n    }\r\n\r\n    const renderGoalsByCategories = (category) => {\r\n        const {name, isCollapsed = true, id:categoryId} = category;\r\n        const filteredGoals = goals.filter(goal => goal.categoryId === +categoryId);\r\n        return (\r\n            <div key={categoryId} className='category'>\r\n                <div\r\n                    onClick={() => toggleCollapseCategory(categoryId)}\r\n                    className='category-name'\r\n                >\r\n                    <p>{name} - {filteredGoals.length}</p><div className='cross-line'/>\r\n                    <i className='delete-category' onClick={(e) => removeCategory(e, categoryId)}>&#10007;</i>\r\n                </div>\r\n                {!isCollapsed && filteredGoals.map((goal) => <Goal key={goal.id} goal={goal}/>)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderDashboard = () => {\r\n        switch(viewBy) {\r\n            case 'groups':\r\n                return categories.map(renderGoalsByCategories);\r\n            case 'freeList':\r\n                return goals.map((goal) => <Goal {...props} goal={goal} key={goal.id}/>)\r\n            default:\r\n                return <div>not found</div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='dashboard'>\r\n            {renderDashboard()}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    categories: state.dashboard.categories,\r\n    viewBy: state.dashboard.viewBy,\r\n    goals: state.dashboard.goals\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        toggleCollapseCategory,\r\n        deleteCategory\r\n    }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GoalCategories);","import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport EditInput from '../../../reusable/edit_input';\r\n\r\nimport {\r\n    addGoal,\r\n    discardGoalCreation,\r\n    toggleFilters,\r\n    changeGoalTitle,\r\n    changeGoalCategory,\r\n    createGoal,\r\n    changeView,\r\n    createCategory\r\n} from '../reducer/actions';\r\n\r\nconst FilterControls = (props) => {\r\n    const {\r\n        showGoalCreation,\r\n        showFilters,\r\n        goalCreation,\r\n        categories,\r\n\r\n        addGoal,\r\n        discardGoalCreation,\r\n        toggleFilters,\r\n        changeGoalTitle,\r\n        changeGoalCategory,\r\n        createGoal,\r\n        changeView,\r\n        createCategory\r\n    } = props;\r\n\r\n    const {title, categoryId} = goalCreation;\r\n\r\n    const [showGroupCreating, showHideGroupCreating] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <div className='filter-controls'>\r\n                <div className='goal-creation'>\r\n                    {showGoalCreation ? (\r\n                        <>\r\n                            <input\r\n                                type='text'\r\n                                className='add-goal-area'\r\n                                placeholder='Type a goal'\r\n                                onChange={(e) => changeGoalTitle(e.target.value)}\r\n                                value={title}\r\n                            />\r\n                            <div className='actions'>\r\n                                <button disabled={!title.length || !categoryId} onClick={() => createGoal(title, categoryId)}>‚úì</button>\r\n                                <button onClick={() => discardGoalCreation()}>‚úï</button>\r\n                            </div>\r\n                            <select onChange={(e) => changeGoalCategory(e.target.value)}>\r\n                                <option disabled selected></option>\r\n                                {categories.map(({id, name}) => (\r\n                                    <option value={id} key={id}>{name}</option>\r\n                                ))}\r\n                            </select>\r\n                        </>\r\n                    ) : <button onClick={() => addGoal()} className='add-goal'>ADD GOAL</button>}\r\n                </div>\r\n                {showFilters ? (\r\n                    <button onClick={() => toggleFilters()}>hide filters</button>\r\n                ) : <button onClick={() => toggleFilters()}>show filters</button>}\r\n                <button onClick={() => showHideGroupCreating(!showGroupCreating)}>Add group</button>\r\n                <div className='view-by'>\r\n                    <p>View by:</p>\r\n                    <select onChange={(e) => changeView(e.target.value)}>\r\n                        <option value='groups'>Groups</option>\r\n                        <option value='freeList'>Free list</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            {showGroupCreating && (\r\n                <EditInput\r\n                    applyFieldName={(categoryName) => createCategory(categoryName)}\r\n                    endEditing={() => showHideGroupCreating(false)}\r\n                    showActionButtons\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    showGoalCreation: state.dashboard.showGoalCreation,\r\n    showFilters: state.dashboard.showFilters,\r\n    goalCreation: state.dashboard.goalCreation,\r\n    categories: state.dashboard.categories\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({\r\n        addGoal,\r\n        discardGoalCreation,\r\n        toggleFilters,\r\n        changeGoalTitle,\r\n        createGoal,\r\n        changeGoalCategory,\r\n        changeView,\r\n        createCategory\r\n    }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterControls);","import React, {useEffect} from 'react';\nimport {connect} from 'react-redux'\n\nimport Dashboard from '../components/dashboard/dashboard';\nimport FilterControls from '../components/dashboard/components/filter_controls';\n\nconst Root = ({state}) => {\n  useEffect(() => {\n    window.localStorage.setItem('grow', JSON.stringify(state))\n  }, [state])\n\n  return (\n    <div className='main'>\n        <FilterControls />\n        <Dashboard />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({state})\n\nexport default connect(mapStateToProps)(Root);\n","\r\nconst RootReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default RootReducer;","import {actionConstants} from './constants';\r\nimport {generateNewGoal, toggleCollapseCategory, changeGoalProperty, generateNewCriteria, generateNewCategory} from './helper';\r\n\r\nconst initialModifiersState = {\r\n    closed: false,\r\n    done: false\r\n};\r\n\r\nconst filterControlsInitialState = {\r\n    showGoalCreation: false,\r\n    showFilters: false,\r\n    goalCreation: {\r\n        title: '',\r\n        categoryId: null,\r\n    }\r\n}\r\n\r\nconst goalCategoriesState = {\r\n    categories: [],\r\n    goals: [],\r\n    viewBy: 'groups'\r\n}\r\n\r\nconst initialState = {\r\n    ...filterControlsInitialState,\r\n    ...goalCategoriesState\r\n}\r\n\r\nconst DashboardReducer = (state = initialState, action) => {\r\n    const {type, payload} = action;\r\n    switch(type) {\r\n        case actionConstants.CREATE_GOAL:\r\n            const groupOrder = state.goals.filter(goal => goal.categoryId === +payload.categoryId).length;\r\n            const listOrder = state.goals.length + 1;\r\n            return {\r\n                ...state,\r\n                goals: [...state.goals, generateNewGoal({...payload, groupOrder, listOrder})],\r\n                categories: state.categories.map(category => {\r\n                    if(category.id === +payload.categoryId) {\r\n                        category.isCollapsed = false\r\n                    }\r\n                    return category;\r\n                }),\r\n                ...filterControlsInitialState\r\n            };\r\n        case actionConstants.TOGGLE_COLLAPSE_CATEGORY:\r\n            return toggleCollapseCategory(state, payload)\r\n        case actionConstants.DELETE_CATEGORY:\r\n            return {\r\n                ...state,\r\n                categories: state.categories.filter((category) => category.id !== payload)\r\n            }\r\n        case actionConstants.CHANGE_GOAL_STATUS:\r\n            return {\r\n                ...state,\r\n                goals: state.goals.map((goal) => {\r\n                    if(goal.id === +payload.goalId) {\r\n                        goal = Object.assign({}, goal);\r\n                        goal.modifiers = {\r\n                            ...initialModifiersState,\r\n                            [payload.status]: true\r\n                        }\r\n                    }\r\n                    return goal;\r\n                })\r\n            };\r\n        case actionConstants.DELETE_GOAL:\r\n            return {\r\n                ...state,\r\n                goals: state.goals.filter(goal => goal.id !== +payload.goalId)\r\n            }\r\n        case actionConstants.RENAME_GOAL:\r\n            return changeGoalProperty(state, payload, 'title')\r\n        case actionConstants.CHANGE_TIMESTAMP:\r\n            return {\r\n                ...state,\r\n                goals: state.goals.map(goal => {\r\n                    if(goal.id === +payload.goalId) {\r\n                        goal.goalDetails[payload.name] = [payload.value]\r\n                    }\r\n                    return goal;\r\n                })\r\n            }\r\n        case actionConstants.RENAME_CRITERIA:\r\n            return {\r\n                ...state,\r\n                goals: state.goals.map(goal => {\r\n                    if(goal.id === +payload.goalId) {\r\n                        goal = Object.assign({}, goal);\r\n                        goal.goalDetails.successCriteria = goal.goalDetails.successCriteria.map(criteria => {\r\n                            if(criteria.id === +payload.criteriaId) {\r\n                                criteria.title = payload.title\r\n                            }\r\n                            return criteria;\r\n                        })\r\n                    }\r\n                    return goal\r\n                })\r\n            }\r\n        case actionConstants.DELETE_CRITERIA:\r\n            return {\r\n                ...state,\r\n                goals: state.goals.map(goal => {\r\n                    if(goal.id === +payload.goalId) {\r\n                        goal = Object.assign({}, goal);\r\n                        goal.goalDetails.successCriteria = goal.goalDetails.successCriteria.filter(criteria => criteria.id !== +payload.criteriaId);\r\n                    }\r\n                    return goal;\r\n                })\r\n            }\r\n        case actionConstants.CREATE_CRITERIA:\r\n            return {\r\n                ...state,\r\n                goals: state.goals.map(goal => {\r\n                    if(goal.id === +payload.goalId) {\r\n                        goal.goalDetails.successCriteria = [...goal.goalDetails.successCriteria, generateNewCriteria(payload.title)]\r\n                    }\r\n                    return goal;\r\n                })\r\n            }\r\n        case actionConstants.TOGGLE_CRITERIA_COMPLETION:\r\n            return {\r\n                ...state,\r\n                goals: state.goals.map(goal => {\r\n                    if(goal.id === +payload.goalId) {\r\n                        goal = Object.assign({}, goal);\r\n                        goal.goalDetails.successCriteria = goal.goalDetails.successCriteria.map(criteria => {\r\n                            if(criteria.id !== +payload.criteriaId) return criteria;\r\n                            return {\r\n                                ...criteria,\r\n                                isCompleted: !criteria.isCompleted\r\n                            }\r\n                        })\r\n                    }\r\n                    return goal;\r\n                })\r\n            }\r\n        case actionConstants.CREATE_CATEGORY:\r\n            return {\r\n                ...state,\r\n                categories: [...state.categories, generateNewCategory(payload)]\r\n            }\r\n        case actionConstants.ADD_GOAL:\r\n            return {\r\n                ...state,\r\n                showFilters: false,\r\n                showGoalCreation: true\r\n            };\r\n        case actionConstants.DISCARD_GOAL_CREATION:\r\n            return {\r\n                ...state,\r\n                ...filterControlsInitialState\r\n            };\r\n        case actionConstants.TOGGLE_FILTERS:\r\n            return {\r\n                ...state,\r\n                showGoalCreation: false,\r\n                showFilters: !state.showFilters\r\n            };\r\n        case actionConstants.CHANGE_GOAL_TITLE:\r\n            return {\r\n                ...state,\r\n                goalCreation: {\r\n                    ...state.goalCreation,\r\n                    title: action.payload\r\n                },\r\n            };\r\n        case actionConstants.CHANGE_GOAL_CATEGORY:\r\n            return {\r\n                ...state,\r\n                goalCreation: {\r\n                    ...state.goalCreation,\r\n                    categoryId: action.payload\r\n                },\r\n            };\r\n        case actionConstants.CHANGE_VIEW:\r\n            return {\r\n                ...state,\r\n                viewBy: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default DashboardReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './root/root';\nimport './index.scss';\nimport {createStore, combineReducers, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport root from './root/reducer/reducer';\nimport dashboard from './components/dashboard/reducer/reducer';\n\nconst middlewares = [thunkMiddleware];\n\nconst initialState = {}\n\nconst store = createStore(\n  combineReducers({\n    root,\n    dashboard\n  }),\n  JSON.parse(window.localStorage.getItem('grow')) || initialState,\n  applyMiddleware(...middlewares)\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Root />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}